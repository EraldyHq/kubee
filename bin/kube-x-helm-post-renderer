#!/bin/bash
# A post renderer to integrate kustomize and jsonnet
set -TCEeuo pipefail
# shellcheck source=../..//bash-lib/lib/bashlib-error.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-error.sh"
error::set_trap
# shellcheck source=../../bash-lib/lib/bashlib-echo.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-echo.sh"
# shellcheck source=../../bash-lib/lib/bashlib-doc.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-doc.sh"
# shellcheck source=../../bash-lib/lib/bashlib-bash.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-bash.sh"
# shellcheck source=../../bash-lib/lib/bashlib-command.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-command.sh"
# shellcheck source=kube-x-lib.sh
source kube-x-lib.sh

APP_DIRECTORY="${1:-}"

if [[ "$APP_DIRECTORY" =~ "synopsis"|"help" ]]; then
  echo "A post renderer to integrate kustomize and jsonnet"
  echo ""
  echo "$(basename "$0") appDirectory clusterDirectory"
  echo ""
  echo "where:"
  echo "  appDirectory: is the directory of the app to install"
  echo ""
  echo "Note: the Helm templates are passed in stdin"
  echo "See https://helm.sh/docs/topics/advanced/#post-rendering"
  exit 0
fi

if [ ! -d "$APP_DIRECTORY" ]; then
  echo::err "Internal Error: the first argument app directory ($APP_DIRECTORY) is not a valid directory"
  exit 1
fi

# Values files
KUBE_X_CLUSTER_DIR=$PWD

# The whole script run in the app directory
pushd "$APP_DIRECTORY" > /dev/null
bash::trap 'popd >/dev/null' EXIT # EXIT execute also on error

# Grab the manifests passed by Helm
HELM_MANIFEST=$(cat)

##################
# JsonNet
##################
# Processing any JsonNet template if any
JSONNET_DIR="jsonnet"
if [ -d "$JSONNET_DIR" ]; then

  # Update the dependencies (vendor directory)
  JPATH="vendor"
  JSONNET_FILE="jsonnetfile.json"
  if [ ! -d "$JPATH" ] && [ -f "$JSONNET_FILE" ]; then
    jb update
  fi

  FINAL_VALUES_PATH="/dev/shm/kube-x-helm-post-renderer-values.yml"
  kube_x::print_values >| $FINAL_VALUES_PATH
  bash::trap "rm $FINAL_VALUES_PATH" EXIT # EXIT executes also on error

  for JSONNET_FILE in jsonnet/*.jsonnet; do

    echo::info "Processing $JSONNET_FILE"

    # Run
    MIXIN_MANIFEST=$(
      # --string: string as output
      jsonnet \
        --jpath "$JPATH" \
        --string \
        --ext-code "values=std.parseYaml(importstr \"$FINAL_VALUES_PATH\")" \
        --exec "std.manifestYamlDoc((import \"$JSONNET_FILE\"))"
    )

    # Add the jsonnet manifest
    HELM_MANIFEST=$(cat <<EOF
$HELM_MANIFEST
---
# Source: $JSONNET_FILE
$MIXIN_MANIFEST
EOF
)

  done
fi

# Kustomize
# Example:
# https://github.com/thomastaylor312/advanced-helm-demos/tree/master/post-render
KUSTOMIZATION_FILE="kustomization.yaml"
if [ -f "$KUSTOMIZATION_FILE" ]; then
  echo "$HELM_MANIFEST" > all.yaml
  # kustomize should be installed in the PATH
  # a kustomization.yaml file should be present that adds the resource `all.yaml`
  kustomize build . && rm all.yaml
  exit 0
fi

# No Kustomize, output the manifest without kustomization
echo "$HELM_MANIFEST"
