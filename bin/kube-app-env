#!/bin/bash
# @name kube-app-env
# @description
#   Print the export environment statement for the app
#
#   Used in a direnv setup



set -Eeuo pipefail
source bashlib-echo.sh
source bashlib-error.sh
error::set_trap



usage(){

  echo ""
  echo "A direnv extension to set the environment of an Kubernetes Kustomize App"
  echo ""
  echo "To avoid executing app in a bad namespace, you would use"
  echo "this direnv extension to set the app environment."
  echo ""
  echo "Executing:"
  echo '```bash'
  echo "$(basename "$0") <app name> <app namespace>"
  echo '```'
  # shellcheck disable=SC2016
  echo 'where'
  # shellcheck disable=SC2016
  echo '* `app name` is the name of an app directory below `$KUBE_APP_HOME`'
  # shellcheck disable=SC2016
  echo '* `app namespace` is the kubernetes namespace (default to the `app name` value)'
  echo ''
  echo "This command will output the export statement of the app environment"
  # shellcheck disable=SC2016
  echo 'that can be used in your `.envrc` (see below). ie'
  echo '```bash'
  echo 'export KUBECONFIG=xxx'
  echo "export KUBE_APP_NAME=xxx"
  echo "export KUBE_APP_NAMESPACE=xxx"
  echo "export KUBE_APP_DIRECTORY=xxx"
  echo '```'
  echo 'Prerequisites:'
  # shellcheck disable=SC2016
  echo '* The `$KUBE_APP_HOME` environment variable should be set to a directory that'
  echo "  contains kustomize applications"
  echo ''
  # shellcheck disable=SC2016
  echo 'Usage with `dirvenv`: '
  # shellcheck disable=SC2016
  echo 'In your `.envrc` of your Kustomize Kubernetes App'
  echo '```bash'
  echo "eval ($(basename "$0") <app name> <app namespace>)"
  echo '```'
  echo ""


}

######################
# Main
######################

# Check if the app name is provided
if [ -z "$1" ]; then
    usage
    echo:err "The app name is mandatory"
    exit 1
fi

if [ "$1" == "-h" ]; then
  usage
  exit 0
fi

KUBE_APP_NAME=$1
KUBE_APP_NAMESPACE=${2:-$KUBE_APP_NAME}

KUBECONFIG=$HOME/.kube/config-$KUBE_APP_NAME

if [ ! -f "$KUBECONFIG" ]; then
  echo::err"The KUBECONFIG file $KUBECONFIG for the app $KUBE_APP_NAME does not exist"
  echo::err"You will not be able to connect to the cluster"
  exit 1
fi

# Check namespace
KUBECONFIG_NAMESPACE=$(kubectl config view --kubeconfig "$KUBECONFIG" --minify --output 'jsonpath={..namespace}')
if [ "$KUBECONFIG_NAMESPACE" != "$KUBE_APP_NAMESPACE" ]; then
  echo::err "The current context of the KUBECONFIG file $KUBECONFIG does not have the good app namespace (Found $KUBECONFIG_NAMESPACE in place of $KUBE_APP_NAMESPACE)"
  exit;
fi


if [[ $(uname -a) =~ "CYGWIN" ]];  then
  # kubectl on windows require windows style path
  KUBECONFIG=$(cygpath -aw "$KUBECONFIG")
fi

if [ -z "$KUBE_APP_HOME" ]; then
  echo:err "The KUBE_APP_HOME environment variable is mandatory and was not found"
  echo:err "Add it in your bashrc or OS environment variables"
  exit 1
fi
KUBE_APP_DIRECTORY=$KUBE_APP_HOME/$KUBE_APP_NAME
if [ ! -d "$KUBE_APP_DIRECTORY" ]; then
  echo::err "The app directory $KUBE_APP_DIRECTORY does not exist"
  exit 1
fi


echo "export KUBECONFIG=$KUBECONFIG"
echo "export KUBE_APP_NAME=$KUBE_APP_NAME"
echo "export KUBE_APP_NAMESPACE=$KUBE_APP_NAMESPACE"
echo "export KUBE_APP_DIRECTORY=$KUBE_APP_DIRECTORY"



