#!/bin/bash
# @name kube-app-env
# @description
#   Print the export environment statement for the app
#
#   Used in a direnv setup



set -Eeuo pipefail
source bashlib-echo.sh
source bashlib-error.sh
source bashlib-path.sh
error::set_trap



usage(){

  echo ""
  # shellcheck disable=SC2016
  echo 'Note: This command is intended to be used in a `.envrc` file executed by `dirvenv`'
  echo 'See the end section'
  echo ""
  echo "Usage: Print the environment variables of a Kubernetes App"
  echo "to set them automatically by App directory with direnv"
  echo ""
  echo "Executing:"
  echo '```bash'
  echo "$(basename "$0") [<app name>] [<app namespace>]"
  echo '```'
  echo "will output:"
  # shellcheck disable=SC2016
  echo '```bash'
  echo 'export KUBECONFIG=xxx         # value=~/.kube/config-<App Name>'
  echo "export KUBE_APP_NAME=xxx      # value=App Name (Default to the current directory name)"
  echo "export KUBE_APP_NAMESPACE=xxx # value=App Namespace (Default to App Name if not set)"
  echo "export KUBE_APP_DIRECTORY=xxx # value=\$KUBE_APP_HOME/<App Name>"
  echo '```'
  echo ''
  echo 'Envrc/Direnv Usage:'
  # shellcheck disable=SC2016
  echo 'In a `.envrc` file executed by `dirvenv`, you would set:'
  echo '```bash'
  echo "eval ($(basename "$0") <app name> <app namespace>)"
  echo '```'

  # shellcheck disable=SC2016
  echo 'Prerequisites:'
  # shellcheck disable=SC2016
  echo '* The `$KUBE_APP_HOME` environment variable should be set to a directory that'
  echo "  contains kustomize applications"
  echo ''
  echo ''
  echo 'To get the cluster and namespace in your prompt, check [kube-ps1](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/kube-ps1)'


}

######################
# Main
######################



CURRENT_DIRECTORY_NAME=$(basename `pwd`)
KUBE_APP_NAME=${1:-"$CURRENT_DIRECTORY_NAME"}
KUBE_APP_NAMESPACE=${2:-"$KUBE_APP_NAME"}

# Help ?
if [[ "$KUBE_APP_NAME" =~ -h|--help|help ]]; then
  usage
  exit 0
fi

KUBECONFIG=$HOME/.kube/config-$KUBE_APP_NAME

if [ ! -f "$KUBECONFIG" ]; then
  echo::err "The KUBECONFIG file $KUBECONFIG for the app $KUBE_APP_NAME does not exist"
  echo::err "You will not be able to connect to the cluster"
  exit 1
fi

# Check namespace
KUBECONFIG_NAMESPACE=$(kubectl config view --kubeconfig "$KUBECONFIG" --minify --output 'jsonpath={..namespace}')
if [ "$KUBECONFIG_NAMESPACE" != "$KUBE_APP_NAMESPACE" ]; then
  echo::err "The current context of the KUBECONFIG file $KUBECONFIG does not have the good app namespace (Found $KUBECONFIG_NAMESPACE in place of $KUBE_APP_NAMESPACE)"
  exit;
fi


if [[ $(uname -a) =~ "CYGWIN" ]];  then
  # kubectl on windows require windows style path
  KUBECONFIG=$(cygpath -aw "$KUBECONFIG")
fi

if [ -z "$KUBE_APP_HOME" ]; then
  echo:err "The KUBE_APP_HOME environment variable is mandatory and was not found"
  echo:err "Add it in your bashrc or OS environment variables"
  exit 1
fi
KUBE_APP_DIRECTORY=$KUBE_APP_HOME/$KUBE_APP_NAME
if [ ! -d "$KUBE_APP_DIRECTORY" ]; then
  echo::err "The app directory $KUBE_APP_DIRECTORY does not exist"
  exit 1
fi


echo "export KUBECONFIG=$KUBECONFIG"
echo "export KUBE_APP_NAME=$KUBE_APP_NAME"
echo "export KUBE_APP_NAMESPACE=$KUBE_APP_NAMESPACE"
echo "export KUBE_APP_DIRECTORY=$KUBE_APP_DIRECTORY"



