#!/bin/bash
# @name kube-app-restart
# @brief Restart a workload (deployment/statefulset) by app name
# @description
#     Restart a workload by app name
#     A deployment or statefulset is searched with the label `app.kubernetes.io/name=<app name>`
#     and restarted if found with the command `kubectl rollout restart`
#
#


synopsis(){

  echo ""
  echo "Restart an app"
  echo ""
  echo '```bash'
  echo "$(basename "$0") appName"
  echo '```'
  echo ""
  echo "* rollout restart a deployment or statefulset"



}


if [[ "${1:-}" == "synopsis" ]]; then
  synopsis
  exit
fi

######################
# Main
######################

KUBEE_APP_NAME=${1:-}

# Help
if [[ "$KUBEE_APP_NAME" =~ -h|--help|help ]]; then
  doc::help synopsis
  exit
fi


if [ "$KUBEE_APP_NAME" == "" ]; then
    doc::help synopsis
    echo:err "An app name should be provided as argument"
    exit 1
fi

# Kubectl utility
kubee::set_kubeconfig_env

echo::info "Searching a deployment"
read -r DEPLOYMENT_NAME NAMESPACE  <<< "$(kubee::get_resource_by_app_name "$KUBEE_APP_NAME" deployment)"
if [ "$DEPLOYMENT_NAME" != "" ]; then
    echo::info "Deployment found: $DEPLOYMENT_NAME in namespace: $NAMESPACE"
    echo::info "Restarting"
    COMMAND="kubectl rollout restart deployment/$DEPLOYMENT_NAME -n $NAMESPACE"
    echo::info "Executing: $COMMAND"
    eval "$COMMAND"
    exit 0
fi

echo::info "No Deployment found. Searching a Statefulset"
read -r STATEFULSET_NAME NAMESPACE <<< "$(kubee::get_resource_by_app_name "$KUBEE_APP_NAME" statefulset)"
if [ "$STATEFULSET_NAME" != "" ]; then
    echo::info "StatefulSet found: $STATEFULSET_NAME in namespace: $NAMESPACE"
    echo::info "Restarting"
    COMMAND="kubectl rollout restart statefulset/$STATEFULSET_NAME -n $NAMESPACE"
    echo::info "Executing: $COMMAND"
    eval "$COMMAND"
    exit 0
fi

echo::err "No deployment or statefulset found for the app $KUBEE_APP_NAME (with the label $(kubee::get_app_label "$KUBEE_APP_NAME")"
exit 1
