#!/bin/bash

# shellcheck source=./bashlib-error.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-error.sh"
error::strict_mode
error::set_trap
# shellcheck source=./bashlib-echo.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-echo.sh"
# shellcheck source=./bashlib-doc.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-doc.sh"

synopsis(){

  cat << EOF
\`\`\`bash
$(basename "$0")
\`\`\`
EOF

}

if [[ "${1:-}" == "synopsis" ]]; then
  synopsis
  exit
fi

# Namespace may
NAMESPACE=${1:-}
if [ "$NAMESPACE" != "" ]; then
  KUBE_X_NAMESPACE=$NAMESPACE
else
  if [ "${KUBE_X_NAMESPACE:-}" == "" ]; then
    doc::help synopsis
    echo::err "The namespace could not be determined. Set it as first argument or as global parameter KUBE_X_NAMESPACE"
    exit 1
  fi
fi

# Env
# We set just the credentials env
# to be able to print them to the user
KUBE_X_USER=${KUBE_X_USER:-"default"}
echo "KUBE_X_USER=$KUBE_X_USER"
KUBE_X_CLUSTER=${KUBE_X_CLUSTER:-"default"}
echo "KUBE_X_CLUSTER=$KUBE_X_CLUSTER"
KUBE_X_CONTEXT_NAME=${KUBE_X_CONTEXT_NAME:-"$KUBE_X_USER@$KUBE_X_CLUSTER/$KUBE_X_NAMESPACE"}
echo "KUBE_X_CONTEXT_NAME=$KUBE_X_CONTEXT_NAME"
KUBE_X_PASS_HOME=${KUBE_X_PASS_HOME:-"kube-x"}
echo "KUBE_X_PASS_HOME=$KUBE_X_PASS_HOME"


