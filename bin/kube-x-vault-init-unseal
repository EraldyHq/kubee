#!/bin/bash

# Ref: https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-minikube-raft
#
# Note we developed the script so that it can run from the vps
# Not in the pod because it does not have bash and it may be deleted
# We would then loose the files
#

## We should make it possible to unseal only by giving the unseal file

# Set variables for files
INIT_OUTPUT="vault_init_output.txt"
UNSEAL_KEYS_FILE="unseal_keys.txt"
ROOT_TOKEN_FILE="root_token.txt"

# Skip TLS, for reason that I ignore
# it works in the browser but not with the cli
export VAULT_SKIP_VERIFY=1

# Initialize Vault and save the output
# after vault-init initializes a Vault server creates/stores master keys and root token.
# Do not run an unsealed Vault in production with a single key share and a single key threshold.
# https://developer.hashicorp.com/vault/docs/commands/operator/init
# Note: 5 and 3 are the defaults but are added here for better readability
KEY_SHARES=5
KEY_THRESHOLD=3

if [ -f $INIT_OUTPUT ]; then
  echo "The file $INIT_OUTPUT already exists. Exiting."
  exit 1
fi

VAULT_NAMESPACE=vault
VAULT_POD=vault-0
kubectl exec -n $VAULT_NAMESPACE $VAULT_POD  -- vault operator init \
    -key-shares="$KEY_SHARES" \
    -key-threshold="$KEY_THRESHOLD" > $INIT_OUTPUT
# in the output file
# keys is the shares (unsealed key)
# keys_base64 is the shares (but in base64)
# root_token is the root token to login

# Init should run only once, otherwise
# Error initializing: Error making API request.
#
# URL: PUT https://vault.i.eraldy.com/v1/sys/init
# Code: 400. Errors:
#
#* Vault is already initialized
# vault status -format=json

# Extract unseal keys and root token from the init output
UNSEAL_KEYS=()
for (( i=1; i<=KEY_SHARES; i++ )) do
  UNSEAL_KEYS+=("$(grep "Unseal Key $i:" $INIT_OUTPUT | awk '{print $4}')")
done
ROOT_TOKEN=$(grep "Initial Root Token:" $INIT_OUTPUT | awk '{print $4}')

# Save unseal keys and root token to files
echo "${UNSEAL_KEYS[@]}" > $UNSEAL_KEYS_FILE
echo "$ROOT_TOKEN" > $ROOT_TOKEN_FILE

# Unseal Vault with the unseal keys
# Unsealing is the process of constructing the root key necessary to read the decryption key
# to decrypt the data, allowing access to the Vault.
# https://developer.hashicorp.com/vault/docs/commands/operator/unseal
# The command accepts a portion of the master key (an "unseal key")
for KEY in "${UNSEAL_KEYS[@]}"; do
  kubectl exec "$VAULT_NAMESPACE" "$VAULT_POD" -- vault operator unseal "$KEY"
done

# Print completion message
echo "Vault has been initialized and unsealed."
echo "Unseal keys have been saved to $UNSEAL_KEYS_FILE."
echo "Root token has been saved to $ROOT_TOKEN_FILE."
echo "Status: Unsealed should be false"
kubectl exec -n "$VAULT_NAMESPACE" "$VAULT_POD" -- vault status