#!/usr/bin/env bash

# shellcheck source=../..//bash-lib/lib/bashlib-error.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-error.sh"
error::set_strict_mode
error::set_trap
# shellcheck source=../../bash-lib/lib/bashlib-echo.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-echo.sh"
# shellcheck source=../../bash-lib/lib/bashlib-doc.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-doc.sh"
# shellcheck source=../../bash-lib/lib/bashlib-command.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-command.sh"
# shellcheck source=../../bash-lib/lib/bashlib-template.sh
source "${BASHLIB_LIBRARY_PATH:-}${BASHLIB_LIBRARY_PATH:+/}bashlib-template.sh"




inventory_file(){

   SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
   KUBE_X_CLUSTER_DIR="${SCRIPT_DIR}/../resources/cluster/$KUBE_X_CLUSTER_NAME"
   # Envrc
   local KUBE_X_ENV_FILE="${KUBE_X_CLUSTER_ENV_FILE:-"$KUBE_X_CLUSTER_DIR/.envrc"}"
   if [ -f "$KUBE_X_ENV_FILE" ]; then
      echo::debug "Sourcing env file $KUBE_X_ENV_FILE"
      source "$KUBE_X_ENV_FILE"
   fi

   # Connection type to the host. This can be the name of any Ansible connection plugin.
   # The default is ssh
   # https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html#connecting-to-hosts-behavioral-inventory-parameters
   # See connection: ansible-doc -t connection -l
   export KUBE_X_CLUSTER_CONNECTION=${KUBE_X_CLUSTER_CONNECTION:-ssh}

   # FQDN
   export KUBE_X_CLUSTER_SERVER_01_FQDN="$KUBE_X_CLUSTER_SERVER_01_NAME.$KUBE_X_CLUSTER_APEX_DOMAIN"

   # The host
   export KUBE_X_CLUSTER_SERVER_01_ANSIBLE_HOST;
   case $KUBE_X_CLUSTER_CONNECTION in
      "ssh"|"ansible.builtin.ssh")
        KUBE_X_CLUSTER_SERVER_01_ANSIBLE_HOST=$KUBE_X_CLUSTER_SERVER_01_IP
        ;;
      "docker"|"community.docker.docker")
        KUBE_X_CLUSTER_SERVER_01_ANSIBLE_HOST=$KUBE_X_CLUSTER_SERVER_01_NAME
        ;;
      *)
        ;;
   esac

   # Inventory
   local KUBE_X_INVENTORY_FILE="${KUBE_X_CLUSTER_INVENTORY_FILE:-"$KUBE_X_CLUSTER_DIR/ansible-inventory.yml"}"
   if [ ! -f "$KUBE_X_INVENTORY_FILE" ]; then
     echo::err "The ansible inventory file $KUBE_X_INVENTORY_FILE does not exist"
     exit 1
   fi



   # Check the variables
   if ! UNDEFINED_VARS=$(template::check_vars -f "$KUBE_X_INVENTORY_FILE"); then
     # Should exit because of the strict mode
     # but it was not working
     echo::err "Inventory variables missing: ${UNDEFINED_VARS[*]}"
     return 1
   fi
   local SHM_INVENTORY_FILE="/dev/shm/kube-x-ansible-inventory.yml"

   envsubst < "$KUBE_X_INVENTORY_FILE" >| "$SHM_INVENTORY_FILE"
   echo "$SHM_INVENTORY_FILE"

}

play(){

   if ! SHM_INVENTORY_FILE=$(inventory_file); then
     echo::err "Inventory file has errors"
     return 1
   fi
   ansible-playbook -i "$SHM_INVENTORY_FILE" ans_x.ans_x_base.kube_x_site.yml

}



# @internal
synopsis(){

cat << EOT

$(basename "$0") - One-Clik Self-Hosted Kubernetes on a single VPS

Usage:
\`\`\`bash
$(basename "$0") command opts
\`\`\`

Commands:

* play             Provision a cluster
* inventory        Print the Ansible inventory file

Global Options:

* -h --help                       Show this help message


EOT
}


# Assign the first argument to a string
COMMAND="${1:-}"
if [ "$COMMAND" = "" ]; then
    synopsis
    echo::err "A command is mandatory"
    exit 1
fi
shift  # Remove the first argument from the argument list

# Help Asked should not fail for the doc
# We test if before the error warning
if [[ $COMMAND =~ help|-h|--help ]]; then
  doc::help synopsis
  exit
fi

if [[ $COMMAND == "synopsis" ]]; then
  synopsis
  exit
fi




# Assign the rest of the arguments to an array
declare -a ARGS=()
ARGS=("$@")


case $COMMAND in
"play")
    play "${ARGS[@]}" || error::exit $?
    ;;
"inventory"|"inv")
    INVENTORY_FILE=$(inventory_file) || error::exit $?
    cat "$INVENTORY_FILE"
    ;;
"app")
    kube-x-helx "${ARGS[@]}" || error::exit $?
    ;;
*)
  doc::help synopsis
  echo::err "Command $COMMAND is unknown"
  exit 1
esac
