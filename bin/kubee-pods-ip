#!/bin/bash
# @name kube-pods-ip
# @brief Shows the pods ip
# @description
#     Shows the pods ip
#     A node name can be given to show only the pods of a node
#

set -Eeuo pipefail
source bashlib-echo.sh
source bashlib-error.sh
error::set_trap

######################
# Main
######################

usage(){
  echo "Usage:"
  echo ""
  echo "Shows the pods ip"
  echo ""
  echo '```bash'
  echo "$(basename "$0") [node name]"
  echo '```'
  # shellcheck disable=SC2016
  echo 'If `node name` is provided, the pods of this node will only be shown'

}

if [[ "${1:-}" == "synopsis" ]]; then
  usage
  exit
fi

# Help ?
NODE_NAME=${1:-}
if [[ $NODE_NAME =~ -h|help ]]; then
  usage
  exit
fi

# Get env
KUBEE_ENV=$(source kubee-env) || error::exit $?
eval "$KUBEE_ENV"


# Check if the node name is provided
if [ "$NODE_NAME" != "" ]; then
  NAMESPACE_JSONPATH="{range .items[?(@.spec.nodeName==\"$1\")]}{.status.podIP}{\" \"}{.metadata.name}{\"\n\"}{end}"
  # shellcheck disable=SC2016
  AWK_PRINTF='
              BEGIN { print "IP      POD NAME   "
                      print "----      ------     --------  ----------------" }
                    { printf "%12s  %s\n", $1, $2}
              '
else
  NAMESPACE_JSONPATH='{range .items[*]}{.status.podIP}{" "}{.spec.nodeName}{" "}{.metadata.name}{"\n"}{end}'
  # shellcheck disable=SC2016
  AWK_PRINTF='
            BEGIN { print "IP            NODE NAME                       POD NAME   "
                    print "------------  ------------------------------- ---------------------------" }
                  { printf "%12s  %-30s %s\n", $1, $2, $3}
            '
fi


kubectl get pods --all-namespaces -o jsonpath="$NAMESPACE_JSONPATH" | awk "$AWK_PRINTF"