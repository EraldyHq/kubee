{{/*https://cert-manager.io/docs/tutorials/getting-started-with-trust-manager/*/}}
{{/*
    A Bundle represents a set of X.509 certificates that should be distributed across a cluster.
    All Bundles are cluster scoped.
    A Bundle can read input from various CA sources
    and combine the resultant certificates
    into a bundle ready to be used by your applications.
*/}}
{{ $ := mergeOverwrite $ (dict "component" "bundle") }}
apiVersion: trust.cert-manager.io/v1alpha1
kind: Bundle
metadata:
  name: {{.Values.issuers.kubee.bundle_name}}
  {{- /* cluster scoped, no namespacce */}}
  labels:
    {{- include "kubee-manifest-labels" . | indent 4}}
spec:
  sources:
    {{- /*
      A bundle of publicly trusted certificates
      Used to validate most TLS certificates on the internet, such as
      those issued by Let's Encrypt, Google, Amazon and others.
      Note that the init container should be on. defaultPackage.enabled: true
    */}}
    - useDefaultCAs: true
    - secret:
        name: {{ include "cert-manager-kubee-ca-name" . }}
        {{- /*
            Wondering why we used tls.crt and not ca.crt?
            More details https://cert-manager.io/docs/trust/trust-manager/#preparing-for-production.
        */}}
        key: "tls.crt"
  {{- /* Where the resulting bundle will be written */}}
  target:
    {{- /*
      Sync the bundle to a ConfigMap called bundle name
      in every namespace which has the label "linkerd.io/inject=enabled"
      All ConfigMaps will include a PEM-formatted bundle,
      here named "root-certs.pem"
      and in this case we also request binary formatted
      bundles in JKS and PKCS#12 formats named "bundle.jks" and "bundle.p12".
    */}}
    secret:
      {{/* Traefik search only for ca.crt or tls.ca, ca.crt is the default for Kubernetes */}}
      key: "ca.crt"
{{/*    configMap:*/}}
{{/*      key: "kubee-bundle.pem"*/}}
    additionalFormats:
      jks:
        key: "ca.jks"
      pkcs12:
        key: "ca.p12"
    namespaceSelector: { }
{{/*      matchLabels:*/}}
{{/*        kubee/bundle: "enabled"*/}}