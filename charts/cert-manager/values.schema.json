{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "cert-manager": {
      "description": " defined by either the name or alias of your dependency in Chart.yaml @ignored",
      "properties": {
        "clusterResourceNamespace": {
          "default": "",
          "description": "cluster-resource-namespace=my-namespace https://cert-manager.io/docs/configuration/#cluster-resource-namespace The Cluster Resource Namespace is defaulted as being the `cert-manager` namespace, A ClusterIssuer CA will create the certificate in this namespace https://cert-manager.io/docs/configuration/ca/#deployment",
          "required": [],
          "title": "clusterResourceNamespace"
        },
        "crds": {
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "crds",
          "type": "object"
        },
        "namespace": {
          "default": "{{ .Values.namespace }}",
          "description": "Installation namespace",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "prometheus": {
          "description": " https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/README.template.md#prometheus",
          "properties": {
            "enabled": {
              "default": false,
              "description": "We don't create it ourselves because it's pretty hard.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "servicemonitor": {
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "servicemonitor",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "servicemonitor"
          ],
          "title": "prometheus"
        },
        "webhook": {
          "properties": {
            "timeoutSeconds": {
              "default": 4,
              "required": [],
              "title": "timeoutSeconds",
              "type": "integer"
            }
          },
          "required": [
            "timeoutSeconds"
          ],
          "title": "webhook",
          "type": "object"
        }
      },
      "required": [
        "namespace",
        "crds",
        "webhook"
      ],
      "title": "cert-manager"
    },
    "enabled": {
      "default": "false",
      "description": "If true, cert-manager is or will be installed on the cluster When disabled, the default ingress certificate specified on Traefik is used Not a string, a boolean so no quote",
      "required": [],
      "title": "enabled"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "issuers": {
      "description": "The ca issuers",
      "properties": {
        "kubee": {
          "description": "The kubee issuer is used to create certificates for the internal service and pods (ie the local private domain cluster.local)",
          "properties": {
            "bundle_name": {
              "const": "kubee-ca-bundle",
              "default": "kubee-ca-bundle",
              "description": " const: 'kubee-ca-bundle' @schema The kubee cert bundle with the root CA and the kubee ca cert It's distributed to clients to create secure TLS connection",
              "required": [],
              "title": "bundle_name"
            },
            "name": {
              "const": "kubee-ca",
              "default": "kubee-ca",
              "description": " const: 'kubee-ca' @schema The kubee issuer name.",
              "required": [],
              "title": "name"
            }
          },
          "required": [],
          "title": "kubee"
        },
        "public": {
          "description": "The public issuer name. The public issuer is used to create certificate for public access (ie public network / public domain name) Its name should be changed to `letsencrypt-prod` when the `letsencrypt-staging` is working and validated",
          "properties": {
            "name": {
              "default": "letsencrypt-staging",
              "description": " enum: [ 'letsencrypt-staging', 'letsencrypt-prod' ] required: true @schema The public issuer name.",
              "enum": [
                "letsencrypt-staging",
                "letsencrypt-prod"
              ],
              "required": [],
              "title": "name"
            }
          },
          "required": [
            "name"
          ],
          "title": "public"
        }
      },
      "required": [],
      "title": "issuers",
      "type": "object"
    },
    "kubee_internal": {
      "description": " Don't touch, used to block template output of cross dependency",
      "properties": {
        "install_cross_dependency": {
          "default": false,
          "required": [],
          "title": "install_cross_dependency",
          "type": "boolean"
        }
      },
      "required": [
        "install_cross_dependency"
      ],
      "title": "kubee_internal"
    },
    "namespace": {
      "default": "cert-manager",
      "description": "The installation namespace",
      "required": [],
      "title": "namespace"
    },
    "trust-manager": {
      "description": " @ignored",
      "properties": {
        "app": {
          "properties": {
            "metrics": {
              "properties": {
                "service": {
                  "properties": {
                    "servicemonitor": {
                      "properties": {
                        "enabled": {
                          "default": false,
                          "description": "We do it ourselves so that there is some logic",
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ],
                      "title": "servicemonitor",
                      "type": "object"
                    }
                  },
                  "required": [
                    "servicemonitor"
                  ],
                  "title": "service",
                  "type": "object"
                }
              },
              "required": [
                "service"
              ],
              "title": "metrics",
              "type": "object"
            }
          },
          "required": [
            "metrics"
          ],
          "title": "app",
          "type": "object"
        },
        "crds": {
          "properties": {
            "enabled": {
              "default": "false",
              "description": " no matches for kind \"Bundle\" in version \"trust.cert-manager.io/v1alpha1\"",
              "required": [],
              "title": "enabled"
            }
          },
          "required": [],
          "title": "crds",
          "type": "object"
        },
        "secretTargets": {
          "description": "Traefik require the TLS data to be secret",
          "properties": {
            "authorizedSecrets": {
              "description": " not be good executing from another context when creating our values file",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "authorizedSecrets"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "secretTargets",
          "type": "object"
        }
      },
      "required": [
        "crds",
        "app",
        "secretTargets"
      ],
      "title": "trust-manager"
    }
  },
  "required": [
    "issuers"
  ],
  "type": "object"
}