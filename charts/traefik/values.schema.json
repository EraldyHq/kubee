{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "auth": {
      "description": "Ingress Auth Configuration",
      "properties": {
        "middleware_name": {
          "default": "basic-auth",
          "description": " That's applied for internal web app (such as Traefik Dashboard, Prometheus, Alert Manager, ...) The app or api endpoints are still available from an internal container The supported auth are basic-auth and forward-auth Before changing to forward-auth, you should test it with the whoami chart",
          "required": [],
          "title": "middleware_name"
        },
        "private_networks": {
          "description": " used for Ingress Ip restrictions (Traefik IpAllowList) example for a home ip: 143.176.206.80/32",
          "items": {
            "required": []
          },
          "required": [],
          "title": "private_networks"
        }
      },
      "required": [],
      "title": "auth",
      "type": "object"
    },
    "cluster": {
      "description": "Kubee Cluster Chart",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "The admin user  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " required: true enum: [ 'cluster-admin', 'admin' ] @schema Kubernetes clusterRole * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "enum": [
                    "cluster-admin",
                    "admin"
                  ],
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": " format: email minLength: 1 @schema The admin email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "minLength": 1,
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": " required: true minLength: 1 @schema The admin password",
                  "minLength": 1,
                  "required": [],
                  "title": "password"
                },
                "username": {
                  "default": "admin",
                  "description": " required: true minLength: 3 @schema The username",
                  "minLength": 3,
                  "required": [],
                  "title": "username"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": "Trusted Proxies If trusted, reverse proxies handler will proxy and augment the sensitive X-Forwarded-* request headers.  You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart. The cluster chart is responsible for the installation/management of Kubernetes on the nodes",
          "required": [],
          "title": "chart"
        },
        "distribution": {
          "default": "k3s",
          "description": "The kubernetes distribution k3s is the distribution that has a cluster chart implemented.",
          "required": [],
          "title": "distribution"
        },
        "dns": {
          "description": " it's used by cert-manager for the DNS01 proof and by external dns",
          "properties": {
            "cloudflare": {
              "description": "Cloudflare Enabled if the domain list is not empty",
              "properties": {
                "api_token": {
                  "description": " `ApiToken` is now the preferred method (ApiKey is deprecated)",
                  "properties": {
                    "key": {
                      "default": "cloudflare-api-token",
                      "description": " required: true minLength: 1 @schema The key property (in the secret of k8s or any other provider)",
                      "minLength": 1,
                      "required": [],
                      "title": "key"
                    },
                    "kind": {
                      "default": "Secret",
                      "description": " required: true enum: [ 'Secret', 'ExternalSecret' ] @schema The type of secret A secret or external secret The chart is responsible for supporting them",
                      "enum": [
                        "Secret",
                        "ExternalSecret"
                      ],
                      "required": [],
                      "title": "kind"
                    },
                    "property": {
                      "default": "",
                      "description": " Used with the External Secret type",
                      "required": [],
                      "title": "property"
                    },
                    "value": {
                      "default": "",
                      "description": " (Used with the k8s secret type to create a Kubernetes secret)",
                      "required": [],
                      "title": "value"
                    }
                  },
                  "required": [],
                  "title": "api_token"
                },
                "dns_zones": {
                  "description": " format: hostname required: true minLength: 0 @schema The dns Zones that are managed by cloudflare, Cloudflare is enabled if the list is not empty",
                  "format": "hostname",
                  "items": {
                    "required": []
                  },
                  "minLength": 0,
                  "required": [],
                  "title": "dns_zones"
                }
              },
              "required": [],
              "title": "cloudflare"
            }
          },
          "required": [],
          "title": "dns"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "description": "Smtp Configuration",
              "properties": {
                "from": {
                  "default": "",
                  "description": " format: email required: false @schema the default from",
                  "format": "email",
                  "required": [],
                  "title": "from"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": 465,
                  "description": " title: Smtp Port description: The Smtp port type: integer required: false @schema the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": "The cluster name used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "default_certificate": {
      "description": " Set the default certificate as default traefik cert Mandatory for kubernetes-dashboard on a local development The rootCA should be added to the OS/Browser as trusted root CA https://doc.traefik.io/traefik/https/tls/#default-certificate",
      "properties": {
        "cert": {
          "default": "",
          "description": "set-file KUBEE.traefik.defaultCertificate.cert=cert/kube-x.dev+1.pem",
          "required": [],
          "title": "cert"
        },
        "key": {
          "default": "",
          "description": "set-file KUBEE.traefik.defaultCertificate.key=cert/kube-x.dev+1-key.pem",
          "required": [],
          "title": "key"
        }
      },
      "required": [],
      "title": "default_certificate"
    },
    "enabled": {
      "default": "false",
      "description": " Not a string, no quote",
      "required": [],
      "title": "enabled"
    },
    "entrypoints": {
      "description": " Used by template that creates IngressRoute (http and tcp)",
      "properties": {
        "smtps": {
          "properties": {
            "name": {
              "default": "smtps",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "smtps",
          "type": "object"
        }
      },
      "required": [
        "smtps"
      ],
      "title": "entrypoints"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": " The FQDN is dnsName.apexDomain If not empty, an ingress is created example: hostname: 'traefik-haship.nip.io'",
      "required": [],
      "title": "hostname"
    },
    "kubee_internal": {
      "description": "Don't change",
      "properties": {
        "install_cross_dependency": {
          "default": false,
          "required": [],
          "title": "install_cross_dependency",
          "type": "boolean"
        }
      },
      "required": [
        "install_cross_dependency"
      ],
      "title": "kubee_internal",
      "type": "object"
    },
    "middlewares": {
      "description": " https://doc.traefik.io/traefik/middlewares",
      "properties": {
        "auth_headers": {
          "description": "Middleware to apply auth headers on website with an authentication form",
          "properties": {
            "name": {
              "default": "auth-headers",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "auth_headers",
          "type": "object"
        },
        "basic_auth": {
          "description": " With the email as main identifier https://doc.traefik.io/traefik/middlewares/http/basicauth/ The admin user is added",
          "properties": {
            "name": {
              "default": "basic-auth",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "users": {
              "description": "List of extra users alongside the admin user",
              "required": [],
              "title": "users",
              "type": "object"
            }
          },
          "required": [
            "name",
            "users"
          ],
          "title": "basic_auth"
        },
        "forward_auth": {
          "description": " https://doc.traefik.io/traefik/middlewares/http/forwardauth/",
          "properties": {
            "name": {
              "default": "forward-auth",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "forward_auth"
        },
        "forward_auth_bearer": {
          "description": " It can be applied on Kube API client such as Kubernetes Dashboard'",
          "properties": {
            "name": {
              "default": "forward-auth-bearer",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "forward_auth_bearer"
        },
        "git_hooks": {
          "description": " Used in Gitops app such as Argocd https://doc.traefik.io/traefik/middlewares/http/ipallowlist/",
          "properties": {
            "name": {
              "default": "git-hooks",
              "required": [],
              "title": "name",
              "type": "string"
            },
            "service": {
              "default": "github",
              "required": [],
              "title": "service",
              "type": "string"
            }
          },
          "required": [
            "name",
            "service"
          ],
          "title": "git_hooks"
        },
        "private_network": {
          "description": " Ip are given via the auth.private_networks",
          "properties": {
            "name": {
              "default": "private-network",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "private_network"
        }
      },
      "required": [
        "auth_headers"
      ],
      "title": "middlewares"
    },
    "namespace": {
      "default": "kube-system",
      "description": " The kube-system namespace tells kubernetes that this app has a higher priority",
      "required": [],
      "title": "namespace"
    },
    "traefik": {
      "description": " https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml",
      "properties": {
        "additionalArguments": {
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "additionalArguments",
          "type": "array"
        },
        "ingressRoute": {
          "description": " https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#access-traefik-dashboard-without-exposing-it",
          "properties": {
            "dashboard": {
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "dashboard",
              "type": "object"
            }
          },
          "required": [
            "dashboard"
          ],
          "title": "ingressRoute"
        },
        "metrics": {
          "properties": {
            "prometheus": {
              "description": "Prometheus is enabled by default",
              "properties": {
                "service": {
                  "description": " This value creates a dedicated metrics service to use with ServiceMonitor Enable Prometheus Metrics https://doc.traefik.io/traefik/observability/metrics/prometheus/ Metrics Info: https://doc.traefik.io/traefik/observability/metrics/overview/#global-metrics",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "service"
                }
              },
              "required": [],
              "title": "prometheus",
              "type": "object"
            }
          },
          "required": [
            "prometheus"
          ],
          "title": "metrics",
          "type": "object"
        },
        "nodeSelector": {
          "description": "nodeSelector is the simplest recommended form of node selection constraint.",
          "required": [],
          "title": "nodeSelector"
        },
        "ports": {
          "properties": {
            "smtp": {
              "description": " It creates the smtp [entrypoint](https://doc.traefik.io/traefik/routing/entrypoints/) - \"--entryPoints.smtp.address=:8025/tcp\"",
              "properties": {
                "expose": {
                  "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                  "properties": {
                    "default": {
                      "default": true,
                      "required": [],
                      "title": "default",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "default"
                  ],
                  "title": "expose",
                  "type": "object"
                },
                "exposedPort": {
                  "default": 25,
                  "description": "Port on the host",
                  "required": [],
                  "title": "exposedPort",
                  "type": "integer"
                },
                "port": {
                  "default": 8025,
                  "description": "Container port",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "description": "Protocol",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "exposedPort",
                "expose",
                "protocol"
              ],
              "title": "smtp"
            },
            "smtps": {
              "description": "SMTP submission over TLS",
              "properties": {
                "expose": {
                  "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                  "properties": {
                    "default": {
                      "default": true,
                      "required": [],
                      "title": "default",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "default"
                  ],
                  "title": "expose",
                  "type": "object"
                },
                "exposedPort": {
                  "default": 465,
                  "description": "Port on the host",
                  "required": [],
                  "title": "exposedPort",
                  "type": "integer"
                },
                "port": {
                  "default": 8465,
                  "description": "Container port",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "description": "Protocol",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "exposedPort",
                "expose",
                "protocol"
              ],
              "title": "smtps",
              "type": "object"
            },
            "web": {
              "description": "Redirections",
              "properties": {
                "redirections": {
                  "description": "https://doc.traefik.io/traefik/routing/entrypoints/#redirection",
                  "properties": {
                    "entryPoint": {
                      "properties": {
                        "scheme": {
                          "default": "https",
                          "required": [],
                          "title": "scheme",
                          "type": "string"
                        },
                        "to": {
                          "default": "websecure",
                          "required": [],
                          "title": "to",
                          "type": "string"
                        }
                      },
                      "required": [
                        "to",
                        "scheme"
                      ],
                      "title": "entryPoint",
                      "type": "object"
                    }
                  },
                  "required": [
                    "entryPoint"
                  ],
                  "title": "redirections",
                  "type": "object"
                }
              },
              "required": [
                "redirections"
              ],
              "title": "web",
              "type": "object"
            }
          },
          "required": [
            "web",
            "smtps"
          ],
          "title": "ports",
          "type": "object"
        },
        "providers": {
          "properties": {
            "kubernetesCRD": {
              "properties": {
                "allowEmptyServices": {
                  "default": "true",
                  "description": " https://acouvreur.github.io/sablier/#/guides/code-server-traefik-kubernetes?id=_3-deploy-traefik-using-helm",
                  "required": [],
                  "title": "allowEmptyServices"
                }
              },
              "required": [],
              "title": "kubernetesCRD",
              "type": "object"
            },
            "kubernetesIngress": {
              "properties": {
                "allowEmptyServices": {
                  "default": true,
                  "description": "return 503, needed to start stopped container with sablier",
                  "required": [],
                  "title": "allowEmptyServices",
                  "type": "boolean"
                }
              },
              "required": [
                "allowEmptyServices"
              ],
              "title": "kubernetesIngress",
              "type": "object"
            }
          },
          "required": [
            "kubernetesCRD",
            "kubernetesIngress"
          ],
          "title": "providers",
          "type": "object"
        },
        "service": {
          "properties": {
            "ipFamilies": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "ipFamilies",
              "type": "array"
            },
            "ipFamilyPolicy": {
              "default": "SingleStack",
              "description": " You can't set up a nodePort because the port is a high-end port between 30000-32767 You can install it as DaemonSet + Node port ? https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#install-as-a-daemonset",
              "required": [],
              "title": "ipFamilyPolicy"
            },
            "spec": {
              "properties": {
                "externalTrafficPolicy": {
                  "default": "Local",
                  "description": "Allow Origin Remote IP to be forwarded",
                  "required": [],
                  "title": "externalTrafficPolicy",
                  "type": "string"
                }
              },
              "required": [
                "externalTrafficPolicy"
              ],
              "title": "spec",
              "type": "object"
            }
          },
          "required": [
            "ipFamilies",
            "spec"
          ],
          "title": "service",
          "type": "object"
        }
      },
      "required": [
        "metrics",
        "additionalArguments",
        "service",
        "providers",
        "ports"
      ],
      "title": "traefik"
    }
  },
  "required": [
    "auth",
    "kubee_internal"
  ],
  "type": "object"
}