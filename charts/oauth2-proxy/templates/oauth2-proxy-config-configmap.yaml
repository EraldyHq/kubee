{{/*# Source: kubee-oauth2-proxy/charts/oauth2-proxy/templates/configmap.yaml*/}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "oauth2-proxy-config-map-name" .}}
  namespace: {{.Values.namespace}}
  labels:
    app: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: {{.Release.Name}}
data:
  # Toml Config file
  # Every command line argument can be specified in a config file by replacing hyphens (-) with underscores (_).
  # If the argument can be specified multiple times, the config option is plural (trailing s).
  #
  # Example:
  #    https://github.com/oauth2-proxy/oauth2-proxy/blob/master/contrib/oauth2-proxy.cfg.example
  #    https://github.com/oauth2-proxy/oauth2-proxy/blob/2d29cee51e7e26daf9021685369c58822b8e2dc2/contrib/local-environment/kubernetes/values.yaml#L50
  # Doc: https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview
  # Traefik Config:
  #   Doc: https://oauth2-proxy.github.io/oauth2-proxy/configuration/integration#configuring-for-use-with-the-traefik-v2-forwardauth-middleware
  #   File: https://github.com/oauth2-proxy/oauth2-proxy/blob/master/contrib/local-environment/oauth2-proxy-traefik.cfg
  oauth2-proxy.cfg: |-

    # Endpoints
    # http_address=0.0.0.0:4180
    https_address = "0.0.0.0:{{ include "oauth2-proxy-https-port" .}}"
    metrics_address = "0.0.0.0:{{ include "oauth2-proxy-metrics-port" .}}"

    # Flow
    # Redirect URL
    redirect_url = "https://{{required "oauth2_proxy.hostname is required" .Values.hostname}}/oauth2/callback"
    # The following option skip the page requesting the user to click on a button to be redirected to the identity provider
    # It can be activated only when traefik is not configure with the error redirection middleware
    skip_provider_button = true

    # Auth
    {{- if (gt (len .Values.auth.email_domains) 0 )}}
    email_domains = [ {{ range $index, $emailDomain := .Values.auth.email_domains }}{{if $index}},{{end}}"{{$emailDomain}}"{{end}} ]
    {{- end }}
    {{- if or (gt (len .Values.auth.whitelist_domains) 0 ) (eq .Values.auth.use_domain_hostname true)}}
      {{- $whiteListDomains := .Values.auth.whitelist_domains }}
      {{- if .Values.auth.use_domain_hostname }}
        {{- $whiteListDomains = append $whiteListDomains (printf ".%s" (include "kubee-get-apex-domain" .Values.hostname)) }}
      {{- end }}
    # Required to allow redirection back to original requested target
    whitelist_domains = [ {{ range $index, $whiteListDomain := $whiteListDomains }}{{if $index}},{{end}}"{{$whiteListDomain}}"{{end}} ]
    {{- end }}

    # Traefik
    # Doc: https://oauth2-proxy.github.io/oauth2-proxy/configuration/integration#forwardauth-with-static-upstreams-configuration
    # Enables the use of X-Forwarded-* headers to determine redirects correctly
    reverse_proxy = true
    # Configures a static response for authenticated sessions
    upstreams = [ "static://202" ]
    # We don't want to proxy anything so pick a non-existent directory
    # upstreams = [ "file:///dev/null" ]

    # Headers options
    # Set the http authorization header with the access token
    # To be able to log to Kubernetes Cli such as Kubernetes dashboard
    set_authorization_header = true

    # Tls
    # To force https, certs are mandatory
    force_https = true
    tls_cert_file = "/etc/oauth2-proxy/tls/tls.crt"
    tls_key_file = "/etc/oauth2-proxy/tls/tls.key"

    # Cookie
    # https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview/#cookie-options
    cookie_secure = true
    {{- if or (gt (len .Values.auth.cookie_domains) 0 ) (eq .Values.auth.use_domain_hostname true) }}
        {{- $cookieDomains := .Values.auth.cookie_domains }}
        {{- if .Values.auth.use_domain_hostname }}
          {{- $cookieDomains = append $cookieDomains (printf ".%s" (include "kubee-get-apex-domain" .Values.hostname)) }}
        {{- end }}
    # Optional domain of the cookie: the longest domain matching the request's host will be used (or the shortest cookie domain if there is no match).
    cookie_domains = [ {{ range $index, $cookieDomain := $cookieDomains }}{{if $index}},{{end}}"{{$cookieDomain}}"{{end}} ]
    {{- end }}
    cookie_name = "_oauth2_proxy"
    cookie_httponly = true
    # cookie_refresh to prevent that Oauth serve expired token
    # The "cookie-refresh" value controls when OAuth2 Proxy tries to refresh an Access-Token.
    # Recommended setting for Redis (ie background refresh): cookie_refresh := Access-Token lifespan - 1m
    # .Values.auth.cookie_refresh_interval was added because of this
    # Issue: https://github.com/oauth2-proxy/oauth2-proxy/issues/1942#issuecomment-2700271002
    {{- $cookie_refresh := (sub .Values.dex.expiration.access_token_lifetime .Values.auth.token_refresh_interval) }}
    {{- if le $cookie_refresh 0 }}
    {{- fail (printf "The cookie refresh interval (%s) is greater than the access token lifetime (%s)"  .Values.auth.token_refresh_interval .Values.dex.expiration.access_token_lifetime) }}
    {{- end }}
    cookie_refresh = "{{ $cookie_refresh }}m"
    # The "cookie-expire" value should be equal to the lifetime of the Refresh-Token
    # that is issued by the OAuth2 authorization server.
    # Default is 168h (ie 7 days)
    # Recommended setting: cookie_expire := Refresh-Token lifespan (i.e. Keycloak client_session_idle)
    # It forces users to reauthenticate and obtain a new refresh token.
    cookie_expire = "{{.Values.dex.expiration.refresh_token_lifetime }}m"

    # Csrf Cookie
    # https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview/#cookie-options
    cookie_csrf_per_request = true
    cookie_csrf_expire = "5m"

    # Dex
    provider = "oidc"
    provider_display_name = "Kubee Dex"
    oidc_issuer_url = "https://{{required "dex.hostname is required" .Values.dex.hostname}}"
    # populate login_url, redeem_url, and oidc_jwks_url using https://{{.Values.dex.hostname}}/.well-known/openid-configuration
    # The only problem is that the pod does not start if dex is down
    skip_oidc_discovery = false
    # Scope
    # This settings control the Grant Access page. ie
    # Oauth2 Proxy would like to:
    #   View basic profile information
    #   View your email address
    #   View your groups
    #   Have offline access (to get refresh token)
    # openid scope is mandatory
    # audience:server:client_id is a scope to get kubernetes as an extra audience to be able to login to kubernetes api (See https://dexidp.io/docs/configuration/custom-scopes-claims-clients/#cross-client-trust-and-authorized-party)
    # For all scopes, see https://dexidp.io/docs/configuration/custom-scopes-claims-clients/
    scope = "openid offline_access email profile groups audience:server:client_id:{{ .Values.dex.clients.kubernetes.client_id }}"


