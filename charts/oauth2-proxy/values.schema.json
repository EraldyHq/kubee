{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "auth": {
      "description": "Auth",
      "properties": {
        "cookie_domains": {
          "description": "Possible domains of the cookie. The longest domain matching the request's host is used (or the shortest cookie domain if there is no match).",
          "format": "hostname",
          "items": {
            "required": []
          },
          "required": [],
          "title": "cookie_domains"
        },
        "cookie_secret": {
          "default": "",
          "description": "Secret Mandatory: A random value used to sign cookies It must be 16, 24, or 32 bytes to create an AES cipher Example command: `dd if=/dev/urandom bs=32 count=1 2\u003e/dev/null | base64 | tr -d -- '\\n' | tr -- '+/' '-_' ; echo` [Doc Reference](https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview#generating-a-cookie-secret)",
          "minLength": 16,
          "required": [],
          "title": "cookie_secret"
        },
        "email_addresses": {
          "description": "Authenticated email address. Only users with this email addresses will be let in The admin email is already taken into account",
          "format": "email",
          "items": {
            "required": []
          },
          "required": [],
          "title": "email_addresses"
        },
        "email_domains": {
          "description": "Email Domains. Only users with this domain will be let in. Accepted value: `*` for all emails or a hostname `your.company.com`",
          "format": "hostname",
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "email_domains"
        },
        "token_refresh_interval": {
          "default": 120,
          "description": "The interval in minutes in which the refresh of the access token will happen before expiration (in minutes) `120` is the default and not `1` because of this [issue](https://github.com/oauth2-proxy/oauth2-proxy/issues/1942#issuecomment-2700271002)",
          "required": [],
          "title": "Refresh interval before access token expiration",
          "type": "integer"
        },
        "use_domain_hostname": {
          "default": true,
          "description": "Add the domain of the hostname as cookie domain and while list domain",
          "required": [],
          "title": "use_domain_hostname",
          "type": "boolean"
        },
        "whitelist_domains": {
          "description": "Whitelist domains. The allowed domains for redirection back to the original requested target",
          "format": "hostname",
          "items": {
            "required": []
          },
          "required": [],
          "title": "whitelist_domains"
        }
      },
      "required": [
        "cookie_secret",
        "token_refresh_interval"
      ],
      "title": "auth",
      "type": "object"
    },
    "cert_manager": {
      "description": "The cert manager kubee chart",
      "properties": {
        "cert-manager": {
          "description": " defined by either the name or alias of your dependency in Chart.yaml @ignored",
          "properties": {
            "clusterResourceNamespace": {
              "default": "",
              "description": "cluster-resource-namespace=my-namespace https://cert-manager.io/docs/configuration/#cluster-resource-namespace The Cluster Resource Namespace is defaulted as being the `cert-manager` namespace, A ClusterIssuer CA will create the certificate in this namespace https://cert-manager.io/docs/configuration/ca/#deployment",
              "required": [],
              "title": "clusterResourceNamespace"
            },
            "crds": {
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "crds",
              "type": "object"
            },
            "namespace": {
              "default": "{{ .Values.namespace }}",
              "description": "Installation namespace",
              "required": [],
              "title": "namespace",
              "type": "string"
            },
            "prometheus": {
              "description": " https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/README.template.md#prometheus",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "We don't create it ourselves because it's pretty hard.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "servicemonitor": {
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "servicemonitor",
                  "type": "object"
                }
              },
              "required": [],
              "title": "prometheus"
            },
            "webhook": {
              "properties": {
                "timeoutSeconds": {
                  "default": 4,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "webhook",
              "type": "object"
            }
          },
          "required": [],
          "title": "cert-manager"
        },
        "dns01": {
          "description": " You don't need to publish a DNS A record",
          "properties": {
            "cloudflare": {
              "description": " Spec: https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEIssuerDNS01ProviderCloudflare Notes: in the doc, they use an email because they show an apiKey Auth, not an apiToken `ApiToken` is now the preferred method",
              "properties": {
                "api_token": {
                  "description": " A secret or external secret can be created",
                  "properties": {
                    "external_secret_remote_ref": {
                      "properties": {
                        "key": {
                          "default": "",
                          "description": "The external secret ref. If the remote ref key is not empty, an external secret is created (used for GitOps)",
                          "required": [],
                          "title": "key"
                        },
                        "property": {
                          "default": "",
                          "description": "The external secret property.",
                          "required": [],
                          "title": "property"
                        }
                      },
                      "required": [],
                      "title": "external_secret_remote_ref",
                      "type": "object"
                    },
                    "k8s_secret_value": {
                      "default": "",
                      "description": "The api token value. If not empty, a Kubernetes secret is created.",
                      "required": [],
                      "title": "k8s_secret_value"
                    }
                  },
                  "required": [],
                  "title": "api_token"
                },
                "dns_zones": {
                  "description": "the dns Zones that are managed by cloudflare, mandatory (ie a list of apex domains)",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "dns_zones"
                }
              },
              "required": [],
              "title": "cloudflare"
            }
          },
          "required": [],
          "title": "dns01"
        },
        "enabled": {
          "default": "false",
          "description": "If true, cert-manager is or will be installed on the cluster When disabled, the default ingress certificate specified on Traefik is used Not a string, a boolean so no quote",
          "required": [],
          "title": "enabled"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "issuers": {
          "description": "The ca issuers",
          "properties": {
            "kubee": {
              "properties": {
                "bundle_name": {
                  "const": "kubee-ca-bundle",
                  "default": "kubee-ca-bundle",
                  "description": "The kubee cert bundle with the root CA and the kubee ca cert It's distributed to clients to create secure TLS connection",
                  "required": [],
                  "title": "bundle_name"
                },
                "name": {
                  "const": "kubee-ca",
                  "default": "kubee-ca",
                  "description": "The kubee issuer name. The kubee issuer is used to create certificates for the local private domain cluster.local",
                  "required": [],
                  "title": "name"
                }
              },
              "required": [],
              "title": "kubee",
              "type": "object"
            },
            "public": {
              "properties": {
                "name": {
                  "default": "letsencrypt-staging",
                  "description": "The public issuer name. The public issuer is used to create certificate for public access (ie public network / public domain name) It should be changed to `letsencrypt-prod` when the `letsencrypt-staging` is working and validated",
                  "enum": [
                    "letsencrypt-staging",
                    "letsencrypt-prod"
                  ],
                  "required": [],
                  "title": "name"
                }
              },
              "required": [],
              "title": "public",
              "type": "object"
            }
          },
          "required": [],
          "title": "issuers",
          "type": "object"
        },
        "kubee_internal": {
          "description": " Don't touch, used to block template output of cross dependency",
          "properties": {
            "install_cross_dependency": {
              "default": false,
              "required": [],
              "title": "install_cross_dependency",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubee_internal"
        },
        "namespace": {
          "default": "cert-manager",
          "description": "The installation namespace",
          "required": [],
          "title": "namespace"
        },
        "trust-manager": {
          "description": " @ignored",
          "properties": {
            "app": {
              "properties": {
                "metrics": {
                  "properties": {
                    "service": {
                      "properties": {
                        "servicemonitor": {
                          "properties": {
                            "enabled": {
                              "default": false,
                              "description": "We do it ourselves so that there is some logic",
                              "required": [],
                              "title": "enabled",
                              "type": "boolean"
                            }
                          },
                          "required": [],
                          "title": "servicemonitor",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "service",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "metrics",
                  "type": "object"
                }
              },
              "required": [],
              "title": "app",
              "type": "object"
            },
            "crds": {
              "properties": {
                "enabled": {
                  "default": "false",
                  "description": " no matches for kind \"Bundle\" in version \"trust.cert-manager.io/v1alpha1\"",
                  "required": [],
                  "title": "enabled"
                }
              },
              "required": [],
              "title": "crds",
              "type": "object"
            },
            "secretTargets": {
              "description": "Traefik require the TLS data to be secret",
              "properties": {
                "authorizedSecrets": {
                  "description": " not be good executing from another context when creating our values file",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "authorizedSecrets"
                },
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "secretTargets",
              "type": "object"
            }
          },
          "required": [],
          "title": "trust-manager"
        }
      },
      "required": [],
      "title": "kubee-cert-manager",
      "type": "object"
    },
    "cluster": {
      "description": "A library chart of common values and helpers for a kubee cluster",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": "The email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": "The password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "username": {
                  "default": "admin",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": " If trusted, reverse_proxy handler will proxy and augment the sensitive X-Forwarded-* request headers. You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart",
          "required": [],
          "title": "chart",
          "type": "string"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "properties": {
                "from": {
                  "default": "",
                  "description": "the default from",
                  "required": [],
                  "title": "from",
                  "type": "string"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": "",
                  "description": "the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp",
              "type": "object"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": " used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "dex": {
      "description": "The dex kubee chart",
      "properties": {
        "clients": {
          "description": " https://dexidp.io/docs/guides/using-dex/#configuring-your-app",
          "properties": {
            "kubectl": {
              "description": " Added if the secret is not empty",
              "properties": {
                "client_id": {
                  "const": "kubectl",
                  "default": "kubectl",
                  "description": "The kubectl client id",
                  "required": [],
                  "title": "client_id"
                },
                "secret": {
                  "default": "",
                  "description": "The oidc client secret (used to exchange the code between kubectl and dex) Example: `openssl rand -base64 32`",
                  "required": [],
                  "title": "secret"
                }
              },
              "required": [],
              "title": "kubectl"
            },
            "kubernetes": {
              "properties": {
                "client_id": {
                  "const": "kubernetes",
                  "default": "kubernetes",
                  "description": "The Kubernetes client id (ie token audience, fix value)",
                  "required": [],
                  "title": "client_id"
                },
                "trusted_peers": {
                  "description": "List of trusted client id All clients that needs kubernetes access should be in that list.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "trusted_peers"
                }
              },
              "required": [],
              "title": "kubernetes",
              "type": "object"
            },
            "oauth2_proxy": {
              "properties": {
                "client_id": {
                  "const": "oauth2-proxy",
                  "default": "oauth2-proxy",
                  "description": "The oauth2-proxy client id. If changed, all kubee charts that depends on it should be deployed again (traefik,...)",
                  "required": [],
                  "title": "client_id"
                },
                "secret": {
                  "default": "",
                  "description": "The oidc client secret (It is used to exchange the code between oauth2-proxy and dex). Example: `openssl rand -base64 32`",
                  "required": [],
                  "title": "The oauth2-proxy client id secret"
                }
              },
              "required": [],
              "title": "oauth2_proxy",
              "type": "object"
            },
            "others": {
              "description": "Other oidc clients definition to add your own clients. See the [doc](https://dexidp.io/docs/guides/using-dex/#configuring-your-app)",
              "items": {
                "required": []
              },
              "required": [],
              "title": "others"
            }
          },
          "required": [],
          "title": "clients"
        },
        "connectors": {
          "description": "Additional [auth connectors](https://dexidp.io/docs/connectors)",
          "items": {
            "required": []
          },
          "required": [],
          "title": "connectors"
        },
        "dex": {
          "description": " Dex Chart Values https://github.com/dexidp/helm-charts/blob/master/charts/dex/values.yaml",
          "properties": {
            "configSecret": {
              "properties": {
                "create": {
                  "default": false,
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "dex-kubee-config",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "configSecret",
              "type": "object"
            },
            "https": {
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "False because it enable it with only one flag via command line and it conflicts with the configuration",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "https",
              "type": "object"
            },
            "image": {
              "properties": {
                "tag": {
                  "default": "v2.41.1",
                  "description": "https://github.com/dexidp/dex/releases",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "networkPolicy": {
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "networkPolicy",
              "type": "object"
            },
            "serviceMonitor": {
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "serviceMonitor",
              "type": "object"
            },
            "volumeMounts": {
              "description": " as seen here: https://github.com/dexidp/dex/blob/a6dfa5ca9f9e1c819a846bd667c3c357da5252ac/examples/k8s/dex.yaml#L34",
              "items": {
                "anyOf": [
                  {
                    "properties": {
                      "mountPath": {
                        "default": "/etc/dex/tls",
                        "required": [],
                        "title": "mountPath",
                        "type": "string"
                      },
                      "name": {
                        "default": "tls",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "volumeMounts"
            },
            "volumes": {
              "items": {
                "anyOf": [
                  {
                    "properties": {
                      "name": {
                        "default": "tls",
                        "required": [],
                        "title": "name",
                        "type": "string"
                      },
                      "secret": {
                        "properties": {
                          "secretName": {
                            "default": "dex-kubee-tls",
                            "required": [],
                            "title": "secretName",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "title": "secret",
                        "type": "object"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "volumes",
              "type": "array"
            }
          },
          "required": [],
          "title": "dex"
        },
        "enabled": {
          "default": false,
          "description": "Boolean to indicate that this chart is or will be installed in the cluster",
          "required": [],
          "title": "Enabled",
          "type": "boolean"
        },
        "expiration": {
          "description": " It's possible to specify units using only s, m and h suffixes. This configuration are used by Oauth proxy to set cookie expiration settings",
          "properties": {
            "access_token_lifetime": {
              "default": 1440,
              "description": "The access token lifetime (in minutes) 24h (1440m) is the [default](https://github.com/dexidp/dex/blob/65814bbd7746611a359408bb355fb4e12d6e2c14/config.yaml.dist#L89), 10m is the [recommended doc setting](https://dexidp.io/docs/configuration/tokens/#expiration-and-rotation-settings), 1m is the [recommended setting of Oauth proxy](https://oauth2-proxy.github.io/oauth2-proxy/configuration/session_storage).",
              "required": [],
              "title": "The access token lifetime",
              "type": "integer"
            },
            "refresh_token_lifetime": {
              "default": 10080,
              "description": "The refresh token lifetime (in minutes), it forces users to reauthenticate 3960h (165 days) is the [dex default](https://github.com/dexidp/dex/blob/65814bbd7746611a359408bb355fb4e12d6e2c14/config.yaml.dist#L89), 168h (7 days, 10080m) is the [default cookie_expire value](https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview?_highlight=cookie_expire#cookie-options)",
              "required": [],
              "title": "The refresh token lifetime",
              "type": "integer"
            }
          },
          "required": [],
          "title": "expiration"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "hostname": {
          "default": "",
          "description": "The public hostname (Required as you need a callback)",
          "minLength": 1,
          "required": [],
          "title": "Hostname"
        },
        "kubee_internal": {
          "description": "@ignored Internal Kubee constant",
          "properties": {
            "install_cross_dependency": {
              "const": false,
              "default": "false",
              "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
              "required": [],
              "title": "install_cross_dependency"
            }
          },
          "required": [],
          "title": "kubee_internal"
        },
        "namespace": {
          "default": "auth",
          "description": "The installation namespace",
          "minLength": 1,
          "required": [],
          "title": "Namespace"
        }
      },
      "required": [],
      "title": "kubee-dex",
      "type": "object"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": "The public hostname",
      "format": "hostname",
      "minLength": 1,
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": "@ignored Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "namespace": {
      "default": "auth",
      "description": "The installation namespace",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "oauth2-proxy": {
      "description": " https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml @ignored",
      "properties": {
        "authenticatedEmailsFile": {
          "description": "Authenticated email",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Not generated by the oauth2_proxy Helm Chart but by our chart",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "persistence": {
              "default": "configmap",
              "description": "Defines how the email addresses file will be projected, via a configmap or secret",
              "required": [],
              "title": "persistence",
              "type": "string"
            },
            "restrictedUserAccessKey": {
              "default": "authenticated-emails",
              "description": "The configmap/secret key under which the list of email access is stored",
              "required": [],
              "title": "restrictedUserAccessKey",
              "type": "string"
            },
            "template": {
              "default": "oauth2-proxy-authenticated-emails",
              "description": " Be aware the value name in the extern config map in data needs to be named to \"restricted_user_access\" or to the provided value in restrictedUserAccessKey field.",
              "required": [],
              "title": "template"
            }
          },
          "required": [
            "enabled",
            "persistence",
            "restrictedUserAccessKey"
          ],
          "title": "authenticatedEmailsFile",
          "type": "object"
        },
        "config": {
          "properties": {
            "existingConfig": {
              "default": "oauth2-proxy-config",
              "description": " the configmap name",
              "required": [],
              "title": "existingConfig"
            },
            "existingSecret": {
              "default": "oauth2-proxy-config",
              "description": " The secret name",
              "required": [],
              "title": "existingSecret"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraVolumeMounts": {
          "description": " extraArgs:  tls-cert-file: /etc/oauth2-proxy/tls/cert.pem  tls-key-file: /etc/oauth2-proxy/tls/cert.key",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "mountPath": {
                    "default": "/etc/oauth2-proxy/tls",
                    "required": [],
                    "title": "mountPath",
                    "type": "string"
                  },
                  "name": {
                    "default": "tls",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "mountPath"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts"
        },
        "extraVolumes": {
          "items": {
            "anyOf": [
              {
                "properties": {
                  "name": {
                    "default": "tls",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "secret": {
                    "properties": {
                      "secretName": {
                        "default": "oauth2-proxy-kubee-tls-ca",
                        "required": [],
                        "title": "secretName",
                        "type": "string"
                      }
                    },
                    "required": [
                      "secretName"
                    ],
                    "title": "secret",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "secret"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "fullnameOverride": {
          "default": "oauth2-proxy",
          "description": "To set the name of objects",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "htpasswdFile": {
          "description": "Local User",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "htpasswdFile",
          "type": "object"
        },
        "httpScheme": {
          "default": "https",
          "description": " https://github.com/oauth2-proxy/manifests/tree/main/helm/oauth2-proxy#tls-configuration",
          "required": [],
          "title": "httpScheme"
        },
        "metrics": {
          "description": "Metrics",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable Prometheus metrics endpoint",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "serviceMonitor": {
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "We do it ourselves",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "serviceMonitor"
          ],
          "title": "metrics",
          "type": "object"
        },
        "nameOverride": {
          "default": "oauth2-proxy",
          "description": "To set the name of labels",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        }
      },
      "required": [
        "config",
        "fullnameOverride",
        "nameOverride",
        "metrics",
        "authenticatedEmailsFile",
        "htpasswdFile",
        "extraVolumes"
      ],
      "title": "oauth2-proxy"
    },
    "prometheus": {
      "description": "Kubee Prometheus Chart",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "exporter_auth": {
          "description": " This is a global authentication configuration for all exporters",
          "properties": {
            "kube_rbac_proxy": {
              "description": " # https://github.com/brancz/kube-rbac-proxy Kube Prometheus uses rbac-proxy to add an authorization layer on exporter We disable it by default: - to minimize memory (20M by exporters) and the head-heck of authorization problem. - because there is also network policy If enabled, the exporter (node and state metrics) will get an extra containers that handle RBAC authorization",
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "version": {
                  "default": "v0.18.2",
                  "required": [],
                  "title": "version",
                  "type": "string"
                }
              },
              "required": [],
              "title": "kube_rbac_proxy"
            },
            "network_policy": {
              "description": " They allow only ingress communication from a prometheus server",
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "network_policy"
            }
          },
          "required": [],
          "title": "exporter_auth"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "grafana_cloud": {
          "description": "grafana cloud remote write prometheus integration",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "password": {
              "default": "",
              "description": "The password",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "relabel_keep_regex": {
              "default": "",
              "description": " Example: `phpfpm_*` would send only the metrics starting with phpfpm `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config By default, no filtering is applied",
              "required": [],
              "title": "relabel_keep_regex"
            },
            "username": {
              "default": "",
              "description": "The username",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [],
          "title": "grafana_cloud",
          "type": "object"
        },
        "hostname": {
          "default": "",
          "description": " If not null, an ingress is added",
          "required": [],
          "title": "hostname"
        },
        "kubee_internal": {
          "description": " in the prometheus release It's used in the chart dependencies condition",
          "properties": {
            "install_cross_dependency": {
              "default": false,
              "description": "Don't modify the value, don't change",
              "required": [],
              "title": "install_cross_dependency",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubee_internal"
        },
        "max_block_duration": {
          "default": "30m",
          "description": "storage.tsdb.max-block-duration=2h) Note that the default value is * 1h for the prometheus query ui * 1h for the grafana explore panel (ie last hour) * 15m for Kubernetes dashboard * 24h for Headlamp We chose 30m to be below the target of 400Mi memory size with kubernetes monitoring installed",
          "required": [],
          "title": "max_block_duration"
        },
        "name": {
          "default": "kubee",
          "description": " (used by clients such as the grafana Chart to create a connection)",
          "required": [],
          "title": "name"
        },
        "namespace": {
          "default": "monitoring",
          "description": " used by clients such as the Grafana Chart to create the data source URI",
          "required": [],
          "title": "namespace"
        },
        "new_relic": {
          "description": "new relic remote write prometheus integration",
          "properties": {
            "bearer": {
              "default": "",
              "description": "for remote write",
              "required": [],
              "title": "bearer",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "relabel_keep_regex": {
              "default": "",
              "description": " Example: `phpfpm_*` would send only the metrics starting with phpfpm `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config By default, no filtering is applied",
              "required": [],
              "title": "relabel_keep_regex"
            }
          },
          "required": [],
          "title": "new_relic",
          "type": "object"
        },
        "operator": {
          "description": "Prometheus Operator",
          "properties": {
            "resources": {
              "description": "CPU/Memory",
              "properties": {
                "memory": {
                  "default": "50Mi",
                  "description": "Memory of the prometheus operator instance (value based on experience)",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [],
          "title": "operator",
          "type": "object"
        },
        "resources": {
          "description": "Memory Limit",
          "properties": {
            "memory": {
              "default": "400Mi",
              "description": " Dynamically, if you query data above the max_block_duration, data is loaded in memory Why? 400Mi. This is: * the default of Kube-Prometheus with default memory setting. * the amount that we get after installing kubernetes-monitoring This is our goal",
              "required": [],
              "title": "memory"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "retention": {
          "default": "30m",
          "description": "storage.tsdb.retention.time=24h) Data in memory is 2 hour old, by setting retention to 2h, we don't allow to query data over 2 hours and to load data in memory The default is 24h Why 30m? Equal to max_block_duration so that we are sure that we will not increase memory of the prometheus pod",
          "required": [],
          "title": "retention"
        },
        "scrape_interval": {
          "default": "1m",
          "description": " It does influence memory as Prometheus keeps by default 2 hours of scraping in memory (max_block_duration) Default was 30s",
          "required": [],
          "title": "scrape_interval"
        },
        "secret": {
          "description": "The kind of secret created",
          "properties": {
            "kind": {
              "default": "Secret",
              "description": " Values supported `Secret` or `ExternalSecret` With `ExternalSecret`, you can use a gitops pull solutions such as ArgoCd/Flux.",
              "required": [],
              "title": "kind"
            }
          },
          "required": [],
          "title": "secret",
          "type": "object"
        },
        "version": {
          "default": "3.1.0",
          "description": " https://github.com/prometheus/prometheus/releases",
          "required": [],
          "title": "version"
        }
      },
      "required": [],
      "title": "kubee-prometheus",
      "type": "object"
    },
    "traefik": {
      "description": "A sub-chart of Traefik",
      "properties": {
        "auth": {
          "description": "Ingress Auth Configuration",
          "properties": {
            "middleware_name": {
              "default": "basic-auth",
              "description": " That's applied for internal web app (such as Traefik Dashboard, Prometheus, Alert Manager, ...) The app or api endpoints are still available from an internal container The supported auth are basic-auth and forward-auth Before changing to forward-auth, you should test it with the whoami chart",
              "required": [],
              "title": "middleware_name"
            },
            "private_networks": {
              "description": " used for Ingress Ip restrictions (Traefik IpAllowList) example for a home ip: 143.176.206.80/32",
              "items": {
                "required": []
              },
              "required": [],
              "title": "private_networks"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "default_certificate": {
          "description": " Set the default certificate as default traefik cert Mandatory for kubernetes-dashboard on a local development The rootCA should be added to the OS/Browser as trusted root CA https://doc.traefik.io/traefik/https/tls/#default-certificate",
          "properties": {
            "cert": {
              "default": "",
              "description": "set-file KUBEE.traefik.defaultCertificate.cert=cert/kube-x.dev+1.pem",
              "required": [],
              "title": "cert"
            },
            "key": {
              "default": "",
              "description": "set-file KUBEE.traefik.defaultCertificate.key=cert/kube-x.dev+1-key.pem",
              "required": [],
              "title": "key"
            }
          },
          "required": [],
          "title": "default_certificate"
        },
        "enabled": {
          "default": "false",
          "description": " Not a string, no quote",
          "required": [],
          "title": "enabled"
        },
        "entrypoints": {
          "description": " Used by template that creates IngressRoute (http and tcp)",
          "properties": {
            "smtps": {
              "properties": {
                "name": {
                  "default": "smtps",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtps",
              "type": "object"
            }
          },
          "required": [],
          "title": "entrypoints"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "hostname": {
          "default": "",
          "description": " The FQDN is dnsName.apexDomain If not empty, an ingress is created example: hostname: 'traefik-haship.nip.io'",
          "required": [],
          "title": "hostname"
        },
        "kubee_internal": {
          "description": "Don't change",
          "properties": {
            "install_cross_dependency": {
              "default": false,
              "required": [],
              "title": "install_cross_dependency",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubee_internal",
          "type": "object"
        },
        "middlewares": {
          "description": " https://doc.traefik.io/traefik/middlewares",
          "properties": {
            "auth_headers": {
              "description": "Middleware to apply auth headers on website with an authentication form",
              "properties": {
                "name": {
                  "default": "auth-headers",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auth_headers",
              "type": "object"
            },
            "basic_auth": {
              "description": " With the email as main identifier https://doc.traefik.io/traefik/middlewares/http/basicauth/ The admin user is added",
              "properties": {
                "name": {
                  "default": "basic-auth",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "users": {
                  "description": "List of extra users alongside the admin user",
                  "required": [],
                  "title": "users",
                  "type": "object"
                }
              },
              "required": [],
              "title": "basic_auth"
            },
            "forward_auth": {
              "description": " https://doc.traefik.io/traefik/middlewares/http/forwardauth/",
              "properties": {
                "name": {
                  "default": "forward-auth",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "forward_auth"
            },
            "forward_auth_bearer": {
              "description": " It can be applied on Kube API client such as Kubernetes Dashboard'",
              "properties": {
                "name": {
                  "default": "forward-auth-bearer",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "forward_auth_bearer"
            },
            "git_hooks": {
              "description": " Used in Gitops app such as Argocd https://doc.traefik.io/traefik/middlewares/http/ipallowlist/",
              "properties": {
                "name": {
                  "default": "git-hooks",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "service": {
                  "default": "github",
                  "required": [],
                  "title": "service",
                  "type": "string"
                }
              },
              "required": [],
              "title": "git_hooks"
            },
            "private_network": {
              "description": " Ip are given via the auth.private_networks",
              "properties": {
                "name": {
                  "default": "private-network",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "private_network"
            }
          },
          "required": [],
          "title": "middlewares"
        },
        "namespace": {
          "default": "kube-system",
          "description": " The kube-system namespace tells kubernetes that this app has a higher priority",
          "required": [],
          "title": "namespace"
        },
        "traefik": {
          "description": " https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml",
          "properties": {
            "additionalArguments": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "additionalArguments",
              "type": "array"
            },
            "ingressRoute": {
              "description": " https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#access-traefik-dashboard-without-exposing-it",
              "properties": {
                "dashboard": {
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "dashboard",
                  "type": "object"
                }
              },
              "required": [],
              "title": "ingressRoute"
            },
            "metrics": {
              "properties": {
                "prometheus": {
                  "description": "Prometheus is enabled by default",
                  "properties": {
                    "service": {
                      "description": " This value creates a dedicated metrics service to use with ServiceMonitor Enable Prometheus Metrics https://doc.traefik.io/traefik/observability/metrics/prometheus/ Metrics Info: https://doc.traefik.io/traefik/observability/metrics/overview/#global-metrics",
                      "properties": {
                        "enabled": {
                          "default": false,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "service"
                    }
                  },
                  "required": [],
                  "title": "prometheus",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "nodeSelector": {
              "description": "nodeSelector is the simplest recommended form of node selection constraint.",
              "required": [],
              "title": "nodeSelector"
            },
            "ports": {
              "properties": {
                "smtp": {
                  "description": " It creates the smtp [entrypoint](https://doc.traefik.io/traefik/routing/entrypoints/) - \"--entryPoints.smtp.address=:8025/tcp\"",
                  "properties": {
                    "expose": {
                      "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                      "properties": {
                        "default": {
                          "default": true,
                          "required": [],
                          "title": "default",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "expose",
                      "type": "object"
                    },
                    "exposedPort": {
                      "default": 25,
                      "description": "Port on the host",
                      "required": [],
                      "title": "exposedPort",
                      "type": "integer"
                    },
                    "port": {
                      "default": 8025,
                      "description": "Container port",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "description": "Protocol",
                      "required": [],
                      "title": "protocol",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "smtp"
                },
                "smtps": {
                  "description": "SMTP submission over TLS",
                  "properties": {
                    "expose": {
                      "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                      "properties": {
                        "default": {
                          "default": true,
                          "required": [],
                          "title": "default",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "expose",
                      "type": "object"
                    },
                    "exposedPort": {
                      "default": 465,
                      "description": "Port on the host",
                      "required": [],
                      "title": "exposedPort",
                      "type": "integer"
                    },
                    "port": {
                      "default": 8465,
                      "description": "Container port",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "description": "Protocol",
                      "required": [],
                      "title": "protocol",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "smtps",
                  "type": "object"
                },
                "web": {
                  "description": "Redirections",
                  "properties": {
                    "redirections": {
                      "description": "https://doc.traefik.io/traefik/routing/entrypoints/#redirection",
                      "properties": {
                        "entryPoint": {
                          "properties": {
                            "scheme": {
                              "default": "https",
                              "required": [],
                              "title": "scheme",
                              "type": "string"
                            },
                            "to": {
                              "default": "websecure",
                              "required": [],
                              "title": "to",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "entryPoint",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "redirections",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "web",
                  "type": "object"
                }
              },
              "required": [],
              "title": "ports",
              "type": "object"
            },
            "providers": {
              "properties": {
                "kubernetesCRD": {
                  "properties": {
                    "allowEmptyServices": {
                      "default": "true",
                      "description": " https://acouvreur.github.io/sablier/#/guides/code-server-traefik-kubernetes?id=_3-deploy-traefik-using-helm",
                      "required": [],
                      "title": "allowEmptyServices"
                    }
                  },
                  "required": [],
                  "title": "kubernetesCRD",
                  "type": "object"
                },
                "kubernetesIngress": {
                  "properties": {
                    "allowEmptyServices": {
                      "default": true,
                      "description": "return 503, needed to start stopped container with sablier",
                      "required": [],
                      "title": "allowEmptyServices",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "kubernetesIngress",
                  "type": "object"
                }
              },
              "required": [],
              "title": "providers",
              "type": "object"
            },
            "service": {
              "properties": {
                "ipFamilies": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "SingleStack",
                  "description": " You can't set up a nodePort because the port is a high-end port between 30000-32767 You can install it as DaemonSet + Node port ? https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#install-as-a-daemonset",
                  "required": [],
                  "title": "ipFamilyPolicy"
                },
                "spec": {
                  "properties": {
                    "externalTrafficPolicy": {
                      "default": "Local",
                      "description": "Allow Origin Remote IP to be forwarded",
                      "required": [],
                      "title": "externalTrafficPolicy",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "spec",
                  "type": "object"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            }
          },
          "required": [],
          "title": "traefik"
        }
      },
      "required": [],
      "title": "kubee-traefik",
      "type": "object"
    },
    "version": {
      "default": "v7.8.1",
      "description": "The oauth-proxy [release version](https://github.com/oauth2-proxy/oauth2-proxy/releases)",
      "required": [],
      "title": "version"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "auth"
  ],
  "type": "object"
}