{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "auth": {
      "description": "Auth",
      "properties": {
        "cookie_domains": {
          "description": "Possible domains of the cookie. The longest domain matching the request's host is used (or the shortest cookie domain if there is no match).",
          "format": "hostname",
          "items": {
            "required": []
          },
          "required": [],
          "title": "cookie_domains"
        },
        "cookie_secret": {
          "default": "",
          "description": "Secret Mandatory: A random value used to sign cookies It must be 16, 24, or 32 bytes to create an AES cipher Example command: `dd if=/dev/urandom bs=32 count=1 2\u003e/dev/null | base64 | tr -d -- '\\n' | tr -- '+/' '-_' ; echo` [Doc Reference](https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview#generating-a-cookie-secret)",
          "minLength": 16,
          "multipleOf": 8,
          "required": [],
          "title": "cookie_secret"
        },
        "email_addresses": {
          "description": "Authenticated email address. Only users with this email addresses will be let in The admin email is already taken into account",
          "format": "email",
          "items": {
            "required": []
          },
          "required": [],
          "title": "email_addresses"
        },
        "email_domains": {
          "description": "Email Domains. Only users with this domain will be let in. Accepted value: `*` for all emails or a hostname `your.company.com`",
          "format": "hostname",
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "email_domains"
        },
        "token_refresh_interval": {
          "default": 120,
          "description": "The interval in minutes in which the refresh of the access token will happen before expiration (in minutes) `120` is the default and not `1` because of this [issue](https://github.com/oauth2-proxy/oauth2-proxy/issues/1942#issuecomment-2700271002)",
          "required": [],
          "title": "Refresh interval before access token expiration",
          "type": "integer"
        },
        "use_domain_hostname": {
          "default": true,
          "description": "Add the domain of the hostname as cookie domain and while list domain",
          "required": [],
          "title": "use_domain_hostname",
          "type": "boolean"
        },
        "whitelist_domains": {
          "description": "Whitelist domains. The allowed domains for redirection back to the original requested target",
          "format": "hostname",
          "items": {
            "required": []
          },
          "required": [],
          "title": "whitelist_domains"
        }
      },
      "required": [
        "cookie_secret",
        "token_refresh_interval"
      ],
      "title": "auth",
      "type": "object"
    },
    "cluster": {
      "description": "Kubee Cluster Chart",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "The admin user  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " required: true enum: [ 'cluster-admin', 'admin' ] @schema Kubernetes clusterRole * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "enum": [
                    "cluster-admin",
                    "admin"
                  ],
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": " format: email minLength: 1 @schema The admin email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "minLength": 1,
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": " required: true minLength: 1 @schema The admin password",
                  "minLength": 1,
                  "required": [],
                  "title": "password"
                },
                "username": {
                  "default": "admin",
                  "description": " required: true minLength: 3 @schema The username",
                  "minLength": 3,
                  "required": [],
                  "title": "username"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": "Trusted Proxies If trusted, reverse proxies handler will proxy and augment the sensitive X-Forwarded-* request headers.  You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart. The cluster chart is responsible for the installation/management of Kubernetes on the nodes",
          "required": [],
          "title": "chart"
        },
        "distribution": {
          "default": "k3s",
          "description": "The kubernetes distribution k3s is the distribution that has a cluster chart implemented.",
          "required": [],
          "title": "distribution"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "description": "Smtp Configuration",
              "properties": {
                "from": {
                  "default": "",
                  "description": " format: email required: false @schema the default from",
                  "format": "email",
                  "required": [],
                  "title": "from"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": 465,
                  "description": " title: Smtp Port description: The Smtp port type: integer required: false @schema the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": "The cluster name used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": "The public hostname",
      "format": "hostname",
      "minLength": 1,
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": "@ignored Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "namespace": {
      "default": "auth",
      "description": "The installation namespace",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "oauth2-proxy": {
      "description": " https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml @ignored",
      "properties": {
        "authenticatedEmailsFile": {
          "description": "Authenticated email",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Not generated by the oauth2_proxy Helm Chart but by our chart",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "persistence": {
              "default": "configmap",
              "description": "Defines how the email addresses file will be projected, via a configmap or secret",
              "required": [],
              "title": "persistence",
              "type": "string"
            },
            "restrictedUserAccessKey": {
              "default": "authenticated-emails",
              "description": "The configmap/secret key under which the list of email access is stored",
              "required": [],
              "title": "restrictedUserAccessKey",
              "type": "string"
            },
            "template": {
              "default": "oauth2-proxy-authenticated-emails",
              "description": " Be aware the value name in the extern config map in data needs to be named to \"restricted_user_access\" or to the provided value in restrictedUserAccessKey field.",
              "required": [],
              "title": "template"
            }
          },
          "required": [
            "enabled",
            "persistence",
            "restrictedUserAccessKey"
          ],
          "title": "authenticatedEmailsFile",
          "type": "object"
        },
        "config": {
          "properties": {
            "existingConfig": {
              "default": "oauth2-proxy-config",
              "description": " the configmap name",
              "required": [],
              "title": "existingConfig"
            },
            "existingSecret": {
              "default": "oauth2-proxy-config",
              "description": " The secret name",
              "required": [],
              "title": "existingSecret"
            }
          },
          "required": [],
          "title": "config",
          "type": "object"
        },
        "extraVolumeMounts": {
          "description": " extraArgs:  tls-cert-file: /etc/oauth2-proxy/tls/cert.pem  tls-key-file: /etc/oauth2-proxy/tls/cert.key",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "mountPath": {
                    "default": "/etc/oauth2-proxy/tls",
                    "required": [],
                    "title": "mountPath",
                    "type": "string"
                  },
                  "name": {
                    "default": "tls",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "mountPath"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "extraVolumeMounts"
        },
        "extraVolumes": {
          "items": {
            "anyOf": [
              {
                "properties": {
                  "name": {
                    "default": "tls",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "secret": {
                    "properties": {
                      "secretName": {
                        "default": "oauth2-proxy-kubee-tls-ca",
                        "required": [],
                        "title": "secretName",
                        "type": "string"
                      }
                    },
                    "required": [
                      "secretName"
                    ],
                    "title": "secret",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "secret"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "fullnameOverride": {
          "default": "oauth2-proxy",
          "description": "To set the name of objects",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "htpasswdFile": {
          "description": "Local User",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "htpasswdFile",
          "type": "object"
        },
        "httpScheme": {
          "default": "https",
          "description": " https://github.com/oauth2-proxy/manifests/tree/main/helm/oauth2-proxy#tls-configuration",
          "required": [],
          "title": "httpScheme"
        },
        "metrics": {
          "description": "Metrics",
          "properties": {
            "enabled": {
              "default": true,
              "description": "Enable Prometheus metrics endpoint",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "serviceMonitor": {
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "We do it ourselves",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "serviceMonitor",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "serviceMonitor"
          ],
          "title": "metrics",
          "type": "object"
        },
        "nameOverride": {
          "default": "oauth2-proxy",
          "description": "To set the name of labels",
          "required": [],
          "title": "nameOverride",
          "type": "string"
        }
      },
      "required": [
        "config",
        "fullnameOverride",
        "nameOverride",
        "metrics",
        "authenticatedEmailsFile",
        "htpasswdFile",
        "extraVolumes"
      ],
      "title": "oauth2-proxy"
    },
    "version": {
      "default": "v7.8.1",
      "description": "The oauth-proxy [release version](https://github.com/oauth2-proxy/oauth2-proxy/releases)",
      "required": [],
      "title": "version"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "auth"
  ],
  "type": "object"
}