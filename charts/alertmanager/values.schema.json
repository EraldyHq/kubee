{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "cluster": {
      "description": "The kubee cluster chart",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "The admin user  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " required: true enum: [ 'cluster-admin', 'admin' ] @schema Kubernetes clusterRole * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "enum": [
                    "cluster-admin",
                    "admin"
                  ],
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": " format: email minLength: 1 @schema The admin email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "minLength": 1,
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": " required: true minLength: 1 @schema The admin password",
                  "minLength": 1,
                  "required": [],
                  "title": "password"
                },
                "username": {
                  "default": "admin",
                  "description": " required: true minLength: 3 @schema The username",
                  "minLength": 3,
                  "required": [],
                  "title": "username"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": "Trusted Proxies If trusted, reverse proxies handler will proxy and augment the sensitive X-Forwarded-* request headers.  You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart. The cluster chart is responsible for the installation/management of Kubernetes on the nodes",
          "required": [],
          "title": "chart"
        },
        "distribution": {
          "default": "k3s",
          "description": "The kubernetes distribution k3s is the distribution that has a cluster chart implemented.",
          "required": [],
          "title": "distribution"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "description": "Smtp Configuration",
              "properties": {
                "from": {
                  "default": "",
                  "description": " format: email required: false @schema the default from",
                  "format": "email",
                  "required": [],
                  "title": "from"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": 465,
                  "description": " title: Smtp Port description: The Smtp port type: integer required: false @schema the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": "The cluster name used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": "The public hostname",
      "format": "hostname",
      "minLength": 1,
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": "@ignored Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "name": {
      "const": "kubee",
      "default": "kubee",
      "description": " const: kubee @schema @ignored Instance name The operator uses it to create unique alertmanager It's also a Kube-Prometheus mandatory variable",
      "required": [],
      "title": "name"
    },
    "namespace": {
      "default": "monitoring",
      "description": "The installation namespace (create an ingress if not empty)",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "opsgenie": {
      "properties": {
        "api_key": {
          "default": "",
          "description": "Opsgenie Api Key to send alert. If the api key is not empty, critical and warning alerts are sent to opsgenie",
          "required": [],
          "title": "api_key"
        }
      },
      "required": [],
      "title": "opsgenie",
      "type": "object"
    },
    "pagerduty": {
      "properties": {
        "service_key": {
          "default": "",
          "description": "The service key is known as integration key in pagerduty documentation",
          "required": [],
          "title": "service_key",
          "type": "string"
        },
        "url": {
          "default": "https://events.eu.pagerduty.com/generic/2010-04-15/create_event.json",
          "description": "The url is known as integration url in pager duty documentation",
          "required": [],
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "service_key",
        "url"
      ],
      "title": "pagerduty",
      "type": "object"
    },
    "resources": {
      "properties": {
        "memory": {
          "default": "50Mi",
          "description": "Memory",
          "required": [],
          "title": "memory"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "secret": {
      "description": "Secret",
      "properties": {
        "kind": {
          "default": "Secret",
          "description": "The kind of Secret manifest created",
          "enum": [
            "Secret",
            "ExternalSecret"
          ],
          "required": [],
          "title": "kind"
        }
      },
      "required": [],
      "title": "secret",
      "type": "object"
    },
    "version": {
      "default": "0.28.0",
      "description": "The [alert manager version](https://github.com/prometheus/alertmanager/releases)",
      "required": [],
      "title": "version"
    },
    "watchdog": {
      "description": "`Watchdog`: the receiver of the [watchdog alert](https://runbooks.prometheus-operator.dev/runbooks/general/watchdog) Example of cron monitoring system: https://healthchecks.io/",
      "properties": {
        "email": {
          "description": "Email address (to check if we can send email)",
          "properties": {
            "repeat_interval": {
              "default": "12h",
              "description": "The interval of notification (By default, one email every 12 hours)",
              "required": [],
              "title": "repeat_interval",
              "type": "string"
            },
            "to": {
              "default": "",
              "required": [],
              "title": "to",
              "type": "string"
            }
          },
          "required": [
            "to",
            "repeat_interval"
          ],
          "title": "email",
          "type": "object"
        },
        "webhook": {
          "description": "WebHook Url (to check if prometheus is still up)",
          "properties": {
            "repeat_interval": {
              "default": "10m",
              "description": "The interval of notification (By default, one http request every 10 min)",
              "required": [],
              "title": "repeat_interval",
              "type": "string"
            },
            "url": {
              "default": "",
              "required": [],
              "title": "url",
              "type": "string"
            }
          },
          "required": [
            "url",
            "repeat_interval"
          ],
          "title": "webhook",
          "type": "object"
        }
      },
      "required": [
        "email",
        "webhook"
      ],
      "title": "watchdog"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "resources",
    "opsgenie",
    "pagerduty",
    "secret"
  ],
  "type": "object"
}