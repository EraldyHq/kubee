apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubee-name" .}}
  namespace: {{.Values.namespace}}
  labels: {{ include "kubee-manifest-labels" . | nindent 4}}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "kubee-pod-labels" . | nindent 6}}
  strategy:
    {{- /* Rectreate is the default value of the Helm Chart */}}
    {{- /* https://github.com/kubernetes-sigs/external-dns/blob/a3f41889657f9843de194482a7cdb964513b4c31/charts/external-dns/values.yaml#L67*/}}
    type: Recreate
  template:
    metadata:
      labels: {{ include "kubee-pod-labels" . | nindent 8}}
      annotations:
        kubectl.kubernetes.io/default-container: 'external-dns'
    spec:
      serviceAccountName: external-dns
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      {{- if .Values.cert_manager.enabled }}
      volumes:
        - name: ca
          secret:
            secretName: {{ .Values.cert_manager.issuers.kubee.bundle_name }}
      {{- end }}
      containers:
        # WebHook
        # https://kubernetes-sigs.github.io/external-dns/latest/docs/tutorials/webhook-provider/#run-an-externaldns-in-tree-provider-as-a-webhook
        - name: webhook-provider
          {{- if eq .Values.provider.type "in-tree"}}
          image: {{.Values.image}}
          {{- else}}
          image: {{.Values.provider.image}}
          {{- end}}
          {{/* Same secruity context on both pod */}}
          securityContext: {{ include "external-dns-container-security-context" . | nindent 12}}
          args:
          {{- if eq .Values.provider.type "in-tree"}}
            - '--webhook-server'
            - '--metrics-address=:{{.Values.provider.endpoints.metrics.port}}'
            - '--source=ingress' # required but not used
            - '--log-level={{.Values.provider.in_tree.log.level}}'
            - '--log-format={{.Values.provider.in_tree.log.format}}'
            - '--request-timeout={{.Values.provider.in_tree.request_timeout}}'
            - '--provider={{ required "For an in-tree provider, the provider name is required" .Values.provider.name}}'
            {{- range .Values.provider.in_tree.domain_filter}}
            - '--domain-filter={{.}}'
            {{- end}}
            {{- if ne .Values.provider.in_tree.regex_domain_filter ""}}
            - '--regex-domain-filter={{.Values.regex_domain_filter}}'
            {{- end }}
            {{- range .Values.provider.in_tree.exclude_domains}}
            - '--exclude-domains={{.}}'
            {{- end }}
            {{- range .Values.provider.in_tree.zone_id_filter}}
            - '--zone-id-filter={{.}}'
            {{- end }}
          {{- end }}
            {{- range .Values.provider.args }}
            - '{{.}}'
            {{- end }}
            {{- if .Values.cert_manager.enabled }}
            - '--tls-ca=/etc/external-dns/ca.crt'
            {{- end}}
          env:
            {{- range .Values.provider.env}}
            - name: {{.name}}
              valueFrom:
                secretKeyRef:
                  name: {{include "external-dns-provider-secret-name" $}}
                  key: {{.name}}
            {{- end }}
          {{- if eq .Values.cert_manager.enabled true}}
          volumeMounts:
            - name: ca
              mountPath: /etc/external-dns/ca.crt
              readOnly: true
              subPath: ca.crt
          {{- end}}
          livenessProbe:
            httpGet:
              path: {{.Values.provider.endpoints.health.path}}
              port: {{.Values.provider.endpoints.health.port}}
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: {{.Values.provider.endpoints.health.path}}
              port: {{.Values.provider.endpoints.health.port}}
            initialDelaySeconds: 10
            timeoutSeconds: 5
          ports:
            - containerPort: {{.Values.provider.endpoints.webhook.port}}
              name: webhook
            {{- if eq .Values.provider.type "in-tree" }}
              {{- if ne .Values.provider.endpoints.metrics.port .Values.provider.endpoints.health.port }}
              {{- fail (printf "For an intree provider, the metrics (%s) and health (%s) port should be the same" .Values.provider.endpoints.metrics.port .Values.provider.endpoints.health.port)}}
              {{- end }}
            {{- end}}
            - containerPort: {{.Values.provider.endpoints.metrics.port}}
              name: metrics
            - containerPort: {{.Values.provider.endpoints.health.port}}
              name: health
        - name: external-dns
          image: {{.Values.image}}
          imagePullPolicy: IfNotPresent
          securityContext: {{ include "external-dns-container-security-context" . | nindent 12}}
          args:
            - '--provider=webhook'
            - '--webhook-provider-url=http://localhost:{{.Values.provider.endpoints.webhook.port}}'
            - '--webhook-provider-read-timeout={{.Values.server.webhook_read_timeout}}'
            - '--webhook-provider-write-timeout={{.Values.server.webhook_write_timeout}}'
            - '--metrics-address=:7979'
            - '--log-level={{.Values.server.log.level}}'
            - '--log-format={{.Values.server.log.format}}'
            - '--interval={{.Values.server.interval}}'
            {{- range .Values.server.sources }}
            - '--source={{.}}'
            {{- end }}
            {{- if eq .Values.server.auto_sources true}}
            - '--source=ingress'
            - '--source=service'
            - '--source=crd'
            {{- end}}
            {{- if and (eq .Values.traefik.enabled true) (eq .Values.server.auto_sources true) }}
            {{- /* # https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/traefik-proxy/  */}}
            - '--source=traefik-proxy'
            - '--traefik-disable-legacy' # https://github.com/kubernetes-sigs/external-dns/issues/4834
            {{- end}}
            - '--policy={{.Values.server.policy}}'
            - '--registry={{.Values.server.registry.type}}'
            {{- if eq .Values.server.registry.type "txt"}}
            - '--txt-owner-id={{.Values.server.registry.txt.owner_id}}'
              {{- if and (eq .Values.server.registry.txt.prefix "") (eq .Values.server.registry.txt.suffix "")}}{{fail "txt prefix and suffix should not be both empty, otherwise apex record inserion will not work"}}{{end}}
              {{- if ne .Values.server.registry.txt.prefix ""}}
                {{- if not (contains "%{record_type}" .Values.server.registry.txt.prefix )}}{{fail "txt prefix should contains %{record_type}"}}{{end}}
            - '--txt-prefix={{.Values.server.registry.txt.prefix}}'
              {{- end }}
              {{- if ne .Values.server.registry.txt.suffix ""}}
                {{- if ne .Values.server.registry.txt.prefix ""}}{{fail "txt prefix and suffix can not be set together. They are mutually exclusive. Set the prefix to the empty string."}}{{end}}
                {{- if not (contains "%{record_type}" .Values.server.registry.txt.suffix) }}{{fail "txt suffix should contains %{record_type}"}}{{end}}
            - '--txt-suffix={{.Values.server.registry.txt.suffix}}'
              {{- end }}
              {{- if eq .Values.server.registry.txt.encrypt true}}
            - '--txt-encrypt=true'
                {{- if eq .Values.server.registry.txt.encrypt_aes_key ""}}{{fail "server.registry.txt.encrypt_aes_key is mandtory for encryption"}}{{end}}
            - '--encrypt-aes-key={{.Values.server.registry.txt.encrypt_aes_key}}'
              {{- end }}
            {{- end }}
            {{- range .Values.server.record_filtering.managed }}
            - '--managed-record-types={{.}}'
            {{- end }}
            {{- range .Values.server.record_filtering.exclude }}
            - '--exclude-record-types={{.}}'
            {{- end }}
            - '--provider-cache-time={{.Values.server.cache_time}}'
            {{- range .Values.server.args }}
            - '{{.}}'
            {{- end }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

