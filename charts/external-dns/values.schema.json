{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "cluster": {
      "description": "Kubee Cluster Chart",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "The admin user  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " required: true enum: [ 'cluster-admin', 'admin' ] @schema Kubernetes clusterRole * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "enum": [
                    "cluster-admin",
                    "admin"
                  ],
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": " format: email minLength: 1 @schema The admin email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "minLength": 1,
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": " required: true minLength: 1 @schema The admin password",
                  "minLength": 1,
                  "required": [],
                  "title": "password"
                },
                "username": {
                  "default": "admin",
                  "description": " required: true minLength: 3 @schema The username",
                  "minLength": 3,
                  "required": [],
                  "title": "username"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": "Trusted Proxies If trusted, reverse proxies handler will proxy and augment the sensitive X-Forwarded-* request headers.  You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart. The cluster chart is responsible for the installation/management of Kubernetes on the nodes",
          "required": [],
          "title": "chart"
        },
        "distribution": {
          "default": "k3s",
          "description": "The kubernetes distribution k3s is the distribution that has a cluster chart implemented.",
          "required": [],
          "title": "distribution"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "description": "Smtp Configuration",
              "properties": {
                "from": {
                  "default": "",
                  "description": " format: email required: false @schema the default from",
                  "format": "email",
                  "required": [],
                  "title": "from"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": 465,
                  "description": " title: Smtp Port description: The Smtp port type: integer required: false @schema the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": "The cluster name used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "external-dns": {
      "properties": {
        "env": {
          "items": {
            "anyOf": [
              {
                "properties": {
                  "name": {
                    "default": "CF_API_KEY",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "valueFrom": {
                    "properties": {
                      "secretKeyRef": {
                        "properties": {
                          "key": {
                            "default": "apiKey",
                            "required": [],
                            "title": "key",
                            "type": "string"
                          },
                          "name": {
                            "default": "cloudflare-api-key",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "key"
                        ],
                        "title": "secretKeyRef",
                        "type": "object"
                      }
                    },
                    "required": [
                      "secretKeyRef"
                    ],
                    "title": "valueFrom",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "valueFrom"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "name": {
                    "default": "CF_API_EMAIL",
                    "required": [],
                    "title": "name",
                    "type": "string"
                  },
                  "valueFrom": {
                    "properties": {
                      "secretKeyRef": {
                        "properties": {
                          "key": {
                            "default": "email",
                            "required": [],
                            "title": "key",
                            "type": "string"
                          },
                          "name": {
                            "default": "cloudflare-api-key",
                            "required": [],
                            "title": "name",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "key"
                        ],
                        "title": "secretKeyRef",
                        "type": "object"
                      }
                    },
                    "required": [
                      "secretKeyRef"
                    ],
                    "title": "valueFrom",
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "valueFrom"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "provider": {
          "properties": {
            "name": {
              "default": "cloudflare",
              "required": [],
              "title": "name",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "title": "provider",
          "type": "object"
        },
        "serviceMonitor": {
          "properties": {
            "enabled": {
              "const": false,
              "default": "false",
              "description": "We generate ourselves the monitor",
              "required": [],
              "title": "enabled"
            }
          },
          "required": [],
          "title": "serviceMonitor",
          "type": "object"
        }
      },
      "required": [
        "serviceMonitor",
        "provider",
        "env"
      ],
      "title": "external-dns",
      "type": "object"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "default": "registry.k8s.io/external-dns/external-dns:v0.15.1",
      "description": "Image with the [External DNS version](https://github.com/kubernetes-sigs/external-dns/releases)",
      "required": [],
      "title": "image"
    },
    "kubee_internal": {
      "description": "@ignored Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "namespace": {
      "default": "external-dns",
      "description": "The installation namespace",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "provider": {
      "description": " Only [one provider is currently supported](https://github.com/kubernetes-sigs/external-dns/issues/2568) Default to cloudflare if the api_key and the dns zones are specified in the cluster chart https://kubernetes-sigs.github.io/external-dns/latest/docs/tutorials/webhook-provider/ The ideal setup for providers is to run as a sidecar in the same pod of the ExternalDNS container, listening only on localhost",
      "properties": {
        "args": {
          "description": "An array of args to be added to the external dns server Providers are driven by some args. Refer to their documentation to discover them.",
          "items": {
            "examples": [
              "--aws-batch-change-interval=1s"
            ],
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "args",
          "type": "array"
        },
        "endpoints": {
          "properties": {
            "health": {
              "description": "The health",
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": 8080,
                  "description": " type: integer @schema The health port (Not 7979 as this is already taken by external-dns) By default, this is the same value as for the metrics",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "title": "health",
              "type": "object"
            },
            "metrics": {
              "description": "The metrics",
              "properties": {
                "path": {
                  "default": "/metrics",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": 8080,
                  "description": " type: integer @schema The metrics port (Not 7979 as this is already taken by external-dns)",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [
                "path"
              ],
              "title": "metrics",
              "type": "object"
            },
            "webhook": {
              "description": "The webhook/http  port",
              "properties": {
                "port": {
                  "default": 8888,
                  "description": " type: integer @schema The webhook port",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "webhook",
              "type": "object"
            }
          },
          "required": [
            "webhook",
            "metrics",
            "health"
          ],
          "title": "endpoints",
          "type": "object"
        },
        "env": {
          "description": "An array of name, value env stored in secrets and passed as env. Providers secret are driven by env. Refer to their documentation to discover them.",
          "items": {
            "properties": {
              "name": {
                "examples": [
                  "DNSIMPLE_OAUTH"
                ],
                "required": [],
                "title": "an env name",
                "type": "string"
              },
              "value": {
                "examples": [
                  "YOUR_DNSIMPLE_API_KEY"
                ],
                "required": [],
                "title": "an env value",
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "env",
          "type": "array"
        },
        "image": {
          "default": "",
          "description": "The webhook provider image. Required if the provider is `webhook`. `in-tree` uses the `external-dns` image as webhook provider. Example: `ghcr.io/mconfalonieri/external-dns-hetzner-webhook:v0.7.0`",
          "required": [],
          "title": "image"
        },
        "in_tree": {
          "description": "In-tree Provider common arguments",
          "properties": {
            "domain_filter": {
              "description": "Domain filter. Limit to only domains; change to match the zone Create DNS records for host names that match E.g. `example.org` will allow the zone `example.org` and all subdomains (ie `xx.example.org`) `a.example.com` will allow for zone `example.com` `.example.com` will not attempt to match parent zones.",
              "items": {
                "examples": [
                  "10.0.0.in-addr.arpa"
                ],
                "format": "hostname",
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "domain_filter",
              "type": "array"
            },
            "exclude_domains": {
              "description": "Exclude a domain or subdomain Example: `ignore.this.example.com`",
              "items": {
                "examples": [
                  "10.0.0.in-addr.arpa"
                ],
                "format": "hostname",
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "exclude_domains",
              "type": "array"
            },
            "log": {
              "properties": {
                "format": {
                  "default": "text",
                  "description": " enum: [text, json] @schema Log format.",
                  "enum": [
                    "text",
                    "json"
                  ],
                  "required": [],
                  "title": "format"
                },
                "level": {
                  "default": "info",
                  "description": " enum: [panic, debug, info, warning, error, fatal] @schema Log level",
                  "enum": [
                    "panic",
                    "debug",
                    "info",
                    "warning",
                    "error",
                    "fatal"
                  ],
                  "required": [],
                  "title": "level"
                }
              },
              "required": [],
              "title": "log",
              "type": "object"
            },
            "regex_domain_filter": {
              "default": "",
              "description": "Limits possible domains and target zone with a regex. It overrides domain filters and can be specified only once. Example: `(example\\\\.org|company\\\\.com)$` or `example*`",
              "required": [],
              "title": "regex_domain_filter"
            },
            "request_timeout": {
              "default": "30s",
              "required": [],
              "title": "request_timeout",
              "type": "string"
            },
            "zone_id_filter": {
              "description": " example value: `023e105f4ecef8ad9ca31a8372d0c353`",
              "items": {
                "required": []
              },
              "required": [],
              "title": "zone_id_filter"
            }
          },
          "required": [
            "log",
            "request_timeout"
          ],
          "title": "in_tree",
          "type": "object"
        },
        "name": {
          "default": "",
          "description": "The name of the provider (Required for an in-tree provider)",
          "required": [],
          "title": "name"
        },
        "type": {
          "default": "in-tree",
          "description": "Provider. `in-tree` or `webhook`",
          "enum": [
            "in-tree",
            "webhook"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "endpoints",
        "in_tree"
      ],
      "title": "provider"
    },
    "server": {
      "properties": {
        "auto_sources": {
          "default": true,
          "description": " type: boolean @schema @ignored When auto-source is enabled, the following sources are added: [service](https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/service/). for services without ingress such as loadbalancer [ingress](https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/ingress/) [Crd](https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/crd/) [traefik](https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/traefik-proxy/) if enabled in the cluster file",
          "required": [],
          "title": "auto_sources",
          "type": "boolean"
        },
        "cache_time": {
          "default": "0m",
          "description": "The local DNS cache to avoid [rate limiting](https://kubernetes-sigs.github.io/external-dns/latest/docs/rate-limits/) If a DNS entry is deleted/modified manually, the recovery will need to wait this interval for resynchronization. Or you need to restart the pod. You turned if off with the value `0m`, or you empty the cache by restarting the pod",
          "required": [],
          "title": "cache_time"
        },
        "interval": {
          "default": "1m",
          "description": "Interval for DNS sync.",
          "required": [],
          "title": "interval"
        },
        "log": {
          "properties": {
            "format": {
              "default": "text",
              "description": " enum: [text, json] @schema Log format.",
              "enum": [
                "text",
                "json"
              ],
              "required": [],
              "title": "format"
            },
            "level": {
              "default": "info",
              "description": " enum: [panic, debug, info, warning, error, fatal] @schema Log level",
              "enum": [
                "panic",
                "debug",
                "info",
                "warning",
                "error",
                "fatal"
              ],
              "required": [],
              "title": "level"
            }
          },
          "required": [],
          "title": "log",
          "type": "object"
        },
        "namespaced": {
          "const": false,
          "default": "false",
          "description": " const: false @schema @ignored For info, ExternalDNS does not in a namespaced scope (Role and RoleBinding are cluster role). We don't support a namespaced scope",
          "required": [],
          "title": "namespaced"
        },
        "policy": {
          "default": "upsert-only",
          "description": "Policy Synchronization. `upsert-only`: Prevent deleting any records. `sync`: if you want DNS entries to get deleted as well",
          "enum": [
            "upsert-only",
            "sync"
          ],
          "required": [],
          "title": "policy"
        },
        "record_filtering": {
          "properties": {
            "exclude": {
              "description": " type: array items:    enum: [A, AAAA, CNAME, NS, SRV, MX, TXT, NAPTR] @schema Record types to exclude",
              "items": {
                "enum": [
                  "A",
                  "AAAA",
                  "CNAME",
                  "NS",
                  "SRV",
                  "MX",
                  "TXT",
                  "NAPTR"
                ],
                "required": []
              },
              "required": [],
              "title": "exclude",
              "type": "array"
            },
            "managed": {
              "description": " type: array items:    enum: [A, AAAA, CNAME, NS, SRV, MX, TXT, NAPTR] @schema Record types to manage",
              "items": {
                "enum": [
                  "A",
                  "AAAA",
                  "CNAME",
                  "NS",
                  "SRV",
                  "MX",
                  "TXT",
                  "NAPTR"
                ],
                "required": []
              },
              "required": [],
              "title": "managed",
              "type": "array"
            }
          },
          "required": [],
          "title": "record_filtering",
          "type": "object"
        },
        "registry": {
          "properties": {
            "txt": {
              "properties": {
                "encrypt": {
                  "default": false,
                  "description": " type: boolean @schema Encrypt Key is mandatory if true",
                  "required": [],
                  "title": "encrypt",
                  "type": "boolean"
                },
                "encrypt_aes_key": {
                  "default": "",
                  "description": "txt-encrypt=true)",
                  "required": [],
                  "title": "encrypt_aes_key"
                },
                "owner_id": {
                  "default": "kubee",
                  "description": " minLength: 1 @schema A name that identifies this instance of ExternalDNS",
                  "minLength": 1,
                  "required": [],
                  "title": "owner_id"
                },
                "prefix": {
                  "default": "kubee-%{record_type}-",
                  "description": " It should contain record type template like 'prefix-%{record_type}-'. Mutual exclusive with txt-suffix! `%{record_type}` should be included, as any other value will cause a weird duplication of database records. This is optional, but we set a default otherwise apex records are not created as you may have txt field for site verification",
                  "required": [],
                  "title": "prefix"
                },
                "suffix": {
                  "default": "",
                  "description": " Could contain record type template like '-%{record_type}-suffix'. Mutual exclusive with txt-prefix! `%{record_type}` should be included, as any other value will cause a weird duplication of database records.",
                  "required": [],
                  "title": "suffix"
                }
              },
              "required": [],
              "title": "txt",
              "type": "object"
            },
            "type": {
              "default": "txt",
              "description": " enum: [ 'txt', 'aws-sd', 'dynamodb', 'noop' ] @schema [Registry](https://kubernetes-sigs.github.io/external-dns/latest/docs/registry/registry/) where to persist metadata such as [ownership of record](https://kubernetes-sigs.github.io/external-dns/latest/docs/initial-design/#ownership) to not overwrite records not managed by External DNS `txt` stores DNS record metadata in TXT records",
              "enum": [
                "txt",
                "aws-sd",
                "dynamodb",
                "noop"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [
            "txt"
          ],
          "title": "registry",
          "type": "object"
        },
        "sources": {
          "description": " type: array items:   type: string @schema @ignored [Source](https://kubernetes-sigs.github.io/external-dns/latest/docs/sources/about/)",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "sources",
          "type": "array"
        },
        "webhook_read_timeout": {
          "default": "5s",
          "description": " url: 'http://localhost:8888' @ignored The read timeout for the webhook provider in duration format (default: 5s)",
          "required": [],
          "title": "webhook_read_timeout"
        },
        "webhook_write_timeout": {
          "default": "10s",
          "required": [],
          "title": "webhook_write_timeout",
          "type": "string"
        }
      },
      "required": [
        "log",
        "registry",
        "record_filtering",
        "webhook_write_timeout"
      ],
      "title": "server",
      "type": "object"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "server",
    "external-dns"
  ],
  "type": "object"
}