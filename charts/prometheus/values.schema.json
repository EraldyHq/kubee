{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "cluster": {
      "description": "Kubee Cluster Chart",
      "properties": {
        "auth": {
          "description": "Cluster Auth",
          "properties": {
            "admin_user": {
              "description": "The admin user  * created as admin user in Kubernetes and other app  * added in basicAuth",
              "properties": {
                "cluster_role": {
                  "default": "cluster-admin",
                  "description": " required: true enum: [ 'cluster-admin', 'admin' ] @schema Kubernetes clusterRole * `cluster-admin` has full access * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding",
                  "enum": [
                    "cluster-admin",
                    "admin"
                  ],
                  "required": [],
                  "title": "cluster_role"
                },
                "email": {
                  "default": "",
                  "description": " format: email minLength: 1 @schema The admin email It's used by default in apps. For instance: * letsencrypt registration email * alert notifications: prometheus, argocd",
                  "format": "email",
                  "minLength": 1,
                  "required": [],
                  "title": "email"
                },
                "password": {
                  "default": "",
                  "description": " required: true minLength: 1 @schema The admin password",
                  "minLength": 1,
                  "required": [],
                  "title": "password"
                },
                "username": {
                  "default": "admin",
                  "description": " required: true minLength: 3 @schema The username",
                  "minLength": 3,
                  "required": [],
                  "title": "username"
                }
              },
              "required": [],
              "title": "admin_user"
            },
            "trusted_proxies": {
              "description": "Trusted Proxies If trusted, reverse proxies handler will proxy and augment the sensitive X-Forwarded-* request headers.  You should set the CIDR value of: * internal proxy such as traefik * and external proxy such as cloudflare It's used by Traefik and all auth application that needs the real ip and trust the X-forward headers",
              "items": {
                "required": []
              },
              "required": [],
              "title": "trusted_proxies"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "chart": {
          "default": "k3s-ansible",
          "description": "The cluster chart. The cluster chart is responsible for the installation/management of Kubernetes on the nodes",
          "required": [],
          "title": "chart"
        },
        "distribution": {
          "default": "k3s",
          "description": "The kubernetes distribution k3s is the distribution that has a cluster chart implemented.",
          "required": [],
          "title": "distribution"
        },
        "email": {
          "description": "Default smtp server parameters",
          "properties": {
            "smtp": {
              "description": "Smtp Configuration",
              "properties": {
                "from": {
                  "default": "",
                  "description": " format: email required: false @schema the default from",
                  "format": "email",
                  "required": [],
                  "title": "from"
                },
                "hello": {
                  "default": "",
                  "description": "hello (used to present itself, normally the email apex domain name)",
                  "required": [],
                  "title": "hello",
                  "type": "string"
                },
                "host": {
                  "default": "",
                  "description": " title: Smtp host description: The smtp hostname required: true format: hostname @schema The smtp host if the host is not empty, smtp configuration are added for example for argocd email notifications",
                  "format": "hostname",
                  "required": [],
                  "title": "Smtp host"
                },
                "password": {
                  "default": "",
                  "description": "the auth connection password",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "port": {
                  "default": 465,
                  "description": " title: Smtp Port description: The Smtp port type: integer required: false @schema the smtp port",
                  "required": [],
                  "title": "Smtp Port",
                  "type": "integer"
                },
                "username": {
                  "default": "",
                  "description": "the auth connection username",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtp"
            }
          },
          "required": [],
          "title": "email",
          "type": "object"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "name": {
          "default": "kubee",
          "description": "The cluster name used: * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label) * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)",
          "required": [],
          "title": "name"
        }
      },
      "required": [],
      "title": "kubee-cluster",
      "type": "object"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "exporter_auth": {
      "description": "Exporter authentication. This is a global authentication configuration for all exporters",
      "properties": {
        "kube_rbac_proxy": {
          "description": " # https://github.com/brancz/kube-rbac-proxy Kube Prometheus uses rbac-proxy to add an authorization layer on exporter We disable it by default: - to minimize memory (20M by exporters) and the head-heck of authorization problem. - because there is also network policy If enabled, the exporter (node and state metrics) will get an extra containers that handle RBAC authorization",
          "properties": {
            "enabled": {
              "default": false,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "version": {
              "default": "0.18.2",
              "required": [],
              "title": "version",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "version"
          ],
          "title": "kube_rbac_proxy"
        },
        "network_policy": {
          "description": " They allow only ingress communication from a prometheus server",
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "network_policy"
        }
      },
      "required": [],
      "title": "exporter_auth"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "grafana_cloud": {
      "description": "Grafana cloud remote write prometheus integration",
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "password": {
          "default": "",
          "description": "The password",
          "required": [],
          "title": "password",
          "type": "string"
        },
        "relabel_keep_regex": {
          "default": "",
          "description": " Example: `phpfpm_*` would send only the metrics starting with phpfpm `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config By default, no filtering is applied",
          "required": [],
          "title": "relabel_keep_regex"
        },
        "username": {
          "default": "",
          "description": "The username",
          "required": [],
          "title": "username",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "username",
        "password"
      ],
      "title": "grafana_cloud"
    },
    "hostname": {
      "default": "",
      "description": "The public hostname. If not empty, an ingress is added",
      "format": "hostname",
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": "@ignored Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "max_block_duration": {
      "default": "30m",
      "description": "The duration that Prometheus keeps the data in memory. The default is 2h. If the value is 2h, no arguments is applied. It's the prometheus tsdb server argument --storage.tsdb.max-block-duration=2h) Note that the default value is * 1h for the prometheus query ui * 1h for the grafana explore panel (ie last hour) * 15m for Kubernetes dashboard * 24h for Headlamp We chose 30m to be below the target of 400Mi memory size with kubernetes monitoring installed",
      "required": [],
      "title": "max_block_duration"
    },
    "name": {
      "default": "kubee",
      "description": " (used by clients such as the grafana Chart to create a connection)",
      "required": [],
      "title": "name"
    },
    "namespace": {
      "default": "monitoring",
      "description": "The installation namespace. used by clients such as the Grafana Chart to create the data source URI",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "new_relic": {
      "description": "New relic remote write prometheus integration",
      "properties": {
        "bearer": {
          "default": "",
          "description": "for remote write",
          "required": [],
          "title": "bearer",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "relabel_keep_regex": {
          "default": "",
          "description": " Example: `phpfpm_*` would send only the metrics starting with phpfpm `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config By default, no filtering is applied",
          "required": [],
          "title": "relabel_keep_regex"
        }
      },
      "required": [
        "enabled",
        "bearer"
      ],
      "title": "new_relic"
    },
    "operator": {
      "description": "Prometheus Operator",
      "properties": {
        "resources": {
          "description": "CPU/Memory",
          "properties": {
            "memory": {
              "default": "50Mi",
              "description": "Prometheus Operator max memory",
              "required": [],
              "title": "memory"
            }
          },
          "required": [],
          "title": "resources",
          "type": "object"
        }
      },
      "required": [
        "resources"
      ],
      "title": "operator",
      "type": "object"
    },
    "resources": {
      "description": "Prometheus Server Memory Limit",
      "properties": {
        "memory": {
          "default": "400Mi",
          "description": " Dynamically, if you query data above the max_block_duration, data is loaded in memory Why? 400Mi. This is: * the default of Kube-Prometheus with default memory setting. * the amount that we get after installing kubernetes-monitoring This is our goal",
          "required": [],
          "title": "memory"
        }
      },
      "required": [],
      "title": "resources"
    },
    "retention": {
      "default": "30m",
      "description": "Retention. How long to retain data (it's the prometheus server argument storage.tsdb.retention.time=24h). Data in memory is 2 hour old, by setting retention to 2h, we don't allow to query data over 2 hours and to load data in memory The default is 24h. Why 30m? Equal to max_block_duration so that we are sure that we will not increase memory of the prometheus pod",
      "required": [],
      "title": "retention"
    },
    "scrape_interval": {
      "default": "1m",
      "description": "The default scrape interval for target It does influence memory as Prometheus keeps by default 2 hours of scraping in memory (max_block_duration) Default was 30s.",
      "required": [],
      "title": "scrape_interval"
    },
    "secret": {
      "description": "The",
      "properties": {
        "kind": {
          "default": "Secret",
          "description": "Kind of secret created Values supported are `Secret` or `ExternalSecret`",
          "enum": [
            "Secret",
            "ExternalSecret"
          ],
          "required": [],
          "title": "kind"
        }
      },
      "required": [],
      "title": "secret",
      "type": "object"
    },
    "version": {
      "default": "3.1.0",
      "description": "The [prometheus version](https://github.com/prometheus/prometheus/releases)",
      "required": [],
      "title": "version"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "operator",
    "secret"
  ],
  "type": "object"
}