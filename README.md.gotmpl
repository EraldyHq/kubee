
[//]: # (README.md generated by gotmpl. DO NOT EDIT.)

{{ template "chart.versionBadge" . }}

# {{ template "chart.description" . }}


Install in no time, in your VPS:
* [kubernetes](https://github.com/kubernetes/kubernetes), the container leader hosting platform
* and a set of integrated packaged applications (known as `charts` in Kubernetes)

## Why Easy?

Because we are starting from the `simplest Kubernetes cluster` as stated in the [official documentation](https://kubernetes.io/docs/setup/production-environment/#production-control-plane).

> The simplest Kubernetes cluster has the entire control plane 
> and worker node services running on the same machine.
> You can grow that environment by adding worker nodes.

## Features

* Single node Kubernetes with a goal on low memory consumption. A single node can host 110 containers, that's a lot of applications.
* Zero configuration. The {{ template "kubee-chart-label" "kubee charts" }} being aware of each other, they are preconfigured and needs a minimal set of parameters.
* Cluster configuration. Every chart configuration is saved in a {{ template "kubee-cluster-values-file-label" "single cluster values file" }} making it quick and easy to see the state of the cluster.
* One-shot Chart Installation. CRDs dependencies are automatically managed.

## App examples

* `Admin Dashboard` with [Kubernetes Dashboard](./charts/kubernetes-dashboard)
* Certificate Provisioning and monitoring with [cert-manager](./charts/cert-manager/README.md)
* Host, System and App Monitoring with [Prometheus](charts/prometheus), [Alert Manager](charts/alertmanager), [Grafana](charts/grafana/README.md), ...
* [Cron Job](https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/)
* `FAAS (Function as a service)` as functions are container
* `Database provisioning` with operator such as [MariaDb](charts/mariadb/README.md), `CNPG` for postgres, ...
* `Secret Management` with [Kubernetes Secret](https://kubernetes.io/docs/tasks/configmap-secret/), [External Secret](charts/external-secrets/README.md), [Vault](charts/vault/README.md), ...)
* Self-healing mechanism with the integrated container supervisor
* No downtime thanks to [Rolling Update](https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/)
* CI/CD Deployment with [ArgoCd](charts/argocd/README.md), Flux

## List of Kubee Charts


{{ $model := (.Files.Get "model.yaml") | fromYaml }}

| Kubee Chart | Status  | Kind | Category |
|-----------|---------|------|----------|
{{- range $key, $values := $model }}
{{- $name := trimPrefix "kubee-" $key }}
{{- $description := trimSuffix "Chart" (trimPrefix "Kubee " $values.description)  }}
{{- if or (eq $values.kind "internal") }}
{{ continue }}
{{- end }}
| [{{ $description }}]({{ template "kubee-chart-url"}}/{{$name}}/README.md) | {{ template "kubee-chart-status-label" $values.status }} | {{ $values.kind }} | {{ $values.category }}  |
{{- end }}

Note that you are not limited to Kubee Charts. 
You can install any Helm chart or Kubernetes Manifest, but you would need to discover the configuration yourself.

To make your charts, `kubee`  compatible and reuse the configuration of dependent charts, 
you can read the {{ template "kubee-chart-label" "kubee chart documentation" }}.

## Steps

### Installation

On Mac / Linux / Windows WSL with HomeBrew

```bash
brew install --HEAD eraldyhq/tap/kubee
```

### Getting Started

See [How to create a cluster and install applications](docs/site/cluster-creation.md)

## Contribute

See [Contribute/Dev](contrib/contribute.md)
