{{- if eq .Values.kube_x.prometheus.enabled true }}
# launch a HA Prometheus deployment into your Kubernetes Cluster using a Prometheus resource defined by Prometheus Operator.
# definition is here:
# https://prometheus-operator.dev/docs/api-reference/api/#monitoring.coreos.com/v1.Prometheus
# or here in Github: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheus
# example: https://github.com/prometheus-operator/prometheus-operator/blob/main/example/user-guides/alerting/prometheus-example.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus
spec:
  # image: quay.io/prometheus/prometheus:v2.22.1
  # Number of replicas of each shard to deploy
  replicas: 1 # could be 2 for HA, default to 1
  # Service Account to run
  serviceAccountName: prometheus
  # serviceMonitor Selector
  serviceMonitorSelector: { } # Select all configured ServiceMonitor resources using {}
    # Example to select all ServiceMonitors with the `team: frontend` label.
    # It enables the frontend team to create new `ServiceMonitors` and `Services`
    # without having to reconfigure the Prometheus object.
    #    matchLabels:
  #      team: frontend
  serviceMonitorNamespaceSelector: { } # Select all namespace?
  # Interval between consecutive scrapes.
  scrapeInterval: 30s # the default
  # Defines the intervals at which the alerting rules are evaluated
  evaluationInterval: 30s # the default
  # Retention: How long to retain the Prometheus data
  retention: 24h # the default
  # The external URL under which the Prometheus service is externally available.
  # Implements the --web.external-url flag: https://prometheus.io/docs/prometheus/latest/command-line/prometheus/
  {{- if ne .Values.kube_x.prometheus.hostname "" }}
  externalUrl: 'https://{{ .Values.kube_x.prometheus.hostname }}'
  {{- end }}
  # Alerting
  alerting:
    alertmanagers:
      # Service
      - name: alertmanager
        port: web
  # Rules selector
  # https://prometheus-operator.dev/docs/developer/alerting/#deploying-prometheus-rules
  ruleSelector: {} # All rules objects, an empty label selector matches all objects
  ruleNamespaceSelector: {} # All namespaces, an empty label selector matches all namespaces
  # ScrapeConfig (for scrape outside the cluster)
  scrapeConfigSelector: {}
  scrapeConfigNamespaceSelector: {}
  # ProbeConfig (for probes with blackbox exporter)
  probeSelector: { }
  probeNamespaceSelector: { }
  # Resources
  resources:
    requests:
      memory: 200Mi
  # securityContext ???, used here: https://grafana.com/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/configuration/config-other-methods/prometheus/prometheus-operator/#deploy-prometheus
  # doc: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  # not in the getting started guide
  #  securityContext:
  #    fsGroup: 2000
  #    runAsNonRoot: true
  #    runAsUser: 1000
  enableAdminAPI: false
  # Remote Write to Grafana Cloud
  # Spec: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.RemoteWriteSpec
  remoteWrite:
    {{- if eq .Values.kube_x.prometheus.grafana_cloud.enabled true }}
    - url: "https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push"
      {{- /*
      writeRelabelConfigs:
        # Send only the phpfpm_* metrics
        # Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        # Example: https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-remote-write/set-your-prometheus-remote-write-integration/#allow-deny
        - sourceLabels: [ __name__ ]
          regex: "phpfpm_(.*)"
          action: keep
      */}}
      basicAuth:
        username:
          name: {{ include "kube-x-prometheus-grafana-cloud-secret-name" . }}
          key: prometheus-username
        password:
          name: {{ include "kube-x-prometheus-grafana-cloud-secret-name" . }}
          key: prometheus-password
    {{- end }}
    {{- if eq .Values.kube_x.prometheus.new_relic.enabled true }}
    # Doc: https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-remote-write/set-your-prometheus-remote-write-integration/#optional-prometheus-operator-configuration
    # Make sure the API key is of the type `Ingest - License`
    - url: "https://metric-api.newrelic.com/prometheus/v1/write?prometheus_server={{ .Values.kube_x.cluster.name }}"
      {{- /*
        # spec: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#authorization
      writeRelabelConfigs:
        # Send only the phpfpm_* metrics
        # Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        # Example: https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-remote-write/set-your-prometheus-remote-write-integration/#allow-deny
        - sourceLabels: [ __name__ ]
          regex: "(phpfpm|argocd|node|traefik)_(.*)"
          action: keep
        - sourceLabels: [ __name__ ]
          regex: ^my_counter$
          targetLabel: newrelic_metric_type
          replacement: "counter"
          action: replace
       */}}
      authorization:
        credentials:
          # The key of the secret to select from
          name: {{ include "kube-x-prometheus-new-relic-secret-name" . }}
          # The secret key to select
          key: prometheus-bearer
    {{- end }}

  # The labels added to any time series or alerts
  # when communicating with external systems (federation, remote storage, Alertmanager)
  externalLabels:
    cluster: "{{ .Values.kube_x.cluster.name }}"
{{- end }}