#!/usr/bin/env bash

# This script download the kube-prometheus scripts

source bashlib-error.sh
error::set_strict_mode
error::set_trap
source bashlib-echo.sh

# this works for executed script or sourced script
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Get the Kube-Prometheus version
KUBE_PROMETHEUS_VERSION=$(yq '.kube_x.versions.kube-prometheus' "$SCRIPT_DIR/../Chart.yaml" | tr -d '~')

if [ "$KUBE_PROMETHEUS_VERSION" == "" ]; then
  echo::err "Unable to retrieve the kube prometheus version (the value was empty)"
  exit 1
fi

LIB_DIR="kube-prometheus"
FILES=(
  "components/k8s-control-plane.libsonnet"
  "components/prometheus.libsonnet"
  "components/prometheus-operator.libsonnet"
  "components/kube-rbac-proxy.libsonnet"
  "addons/dropping-deprecated-metrics-relabelings.libsonnet"
  "components/alertmanager.libsonnet" # needed for variable reference
  # Custom Mixin
  "components/mixin/custom.libsonnet"
  "components/mixin/alerts/alerts.libsonnet"
  "components/mixin/alerts/general.libsonnet"
  "components/mixin/alerts/node.libsonnet"
  "components/mixin/rules/rules.libsonnet"
  "components/mixin/rules/general.libsonnet"
  "components/mixin/rules/node-rules.libsonnet"
  "versions.json"
)
for FILE in "${FILES[@]}"; do
  DEST="$LIB_DIR/$FILE"
  # directory needs to exists
  mkdir -p "$(dirname "$DEST")"
  echo::info "Download the Kube Prometheus Jsonnet lib $FILE with version $KUBE_PROMETHEUS_VERSION"
  curl \
    -s \
    -o "$DEST" \
    --fail \
    "https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/refs/tags/$KUBE_PROMETHEUS_VERSION/jsonnet/kube-prometheus/$FILE"

  echo::success "The jsonnet lib was updated"
done