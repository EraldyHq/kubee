# Enabled
enabled: false
# The installation namespace
# used by clients such as the Grafana Chart to create the data source URI
namespace: 'monitoring'
# The name of the prometheus instance
# (used by clients such as the grafana Chart to create a connection)
name: 'kube-x'
# The prometheus version
# https://github.com/prometheus/prometheus/releases
version: '3.1.0'
# Hostname
# If not null, an ingress is added
hostname: ''
# Memory Limit
resources:
  # Depend on scrape interval, max_block_duration, number of metrics scraped, number of recording rules
  # Dynamically, if you query data above the max_block_duration, data is loaded in memory
  # 400Mi is the default of Kube-Prometheus with default memory setting.
  memory: '200Mi'
# Retention
# How long to retain data (it's the prometheus server argument --storage.tsdb.retention.time=24h)
# Data in memory is 2 hour old, by setting retention to 2h, we don't allow to query data over 2 hours and to load data in memory
# The default is 24h
retention: '2h'
# The duration that Prometheus keeps the data in memory
# The default is 2h. If the value is 2h, no arguments is applied.
# It's the prometheus tsdb server argument --storage.tsdb.max-block-duration=2h)
max_block_duration: '30m'
# The default scrape interval for target
# It does influence memory as Prometheus keeps by default 2 hours of scraping in memory (max_block_duration)
# Default is 30s
scrape_interval: '1m'

# Exporter authentication
# This is a global authentication configuration for all exporters
exporter_auth:
  # Network Policy
  # They allow only ingress communication from a prometheus server
  network_policy:
    enabled: true
  # Rbac Proxy
  # # https://github.com/brancz/kube-rbac-proxy
  # Kube Prometheus uses rbac-proxy to add an authorization layer on exporter
  # We disable it by default:
  # - to minimize memory (20M by exporters) and the head-heck of authorization problem.
  # - because there is also network policy
  # If enabled, the exporter (node and state metrics) will get an extra containers
  # that handle RBAC authorization
  kube_rbac_proxy:
    enabled: false
    version: 0.18.2

# grafana cloud remote write prometheus integration
grafana_cloud:
  enabled: false
  # The username
  username: ''
  # The password
  password: ''
  # The regexp used to filter the metrics name (ie if the regexp matches, the metrics are passed keep to new relic)
  # Example:
  # `phpfpm_*` would send only the metrics starting with phpfpm
  # `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik
  # Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  # By default, no filtering is applied
  relabel_keep_regex: ''
# new relic remote write prometheus integration
new_relic:
  enabled: false
  # for remote write
  bearer: ''
  # The regexp used to filter the metrics name (ie if the regexp matches, the metrics are passed keep to new relic)
  # Example:
  # `phpfpm_*` would send only the metrics starting with phpfpm
  # `(phpfpm|argocd|node|traefik)_(.*)` would send the metrics starting with phpfpm, argocd, node and traefik
  # Doc: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  # By default, no filtering is applied
  relabel_keep_regex: ''
# Prometheus Operator
operator:
  # CPU/Memory
  resources:
    # Memory of the prometheus operator instance (value based on experience)
    memory: '50Mi'


# The kind of secret created
secret:
  # The kind of manifest created
  # Values supported `Secret` or `ExternalSecret`
  # With `ExternalSecret`, you can use a gitops pull solutions such as ArgoCd/Flux.
  kind: 'Secret'


# Tweak to not output the template of the kube-x cross-dependency chart
# in the prometheus release
# It's used in the chart dependencies condition
kube_x_internal:
  # Don't modify the value, don't change
  install_cross_dependency: false
