{{/*
  Git repository are created with a secret and configuration
  https://argo-cd.readthedocs.io/en/stable/operator-manual/argocd-repositories-yaml/
*/}}
{{- if ne .Values.git.repo.url "" }}
{{- if (eq .Values.secret.kind "ExternalSecret") -}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  # A unique name in the namespace
  name: 'argocd-secret-repo'
  namespace: '{{ .Values.namespace }}'
spec:
  # The store from where
  secretStoreRef:
    name: '{{ .Values.external_secrets.store.name }}'
    kind: 'ClusterSecretStore'
  # The target define the secret created
  # and may be pre-processed via template
  target:
    name: repo-base # Secret name in Kubernetes
    template:
      data:
        # .git is mandatory
        url: '{{ .Values.git.repo.url }}'
        username: '{{ .Values.git.repo.username }}'
        password: "{{ print "{{ .repo_password }}" }}"
        # insecure: "true" # Ignore validity of server's TLS certificate. Defaults to "false"
        # forceHttpBasicAuth: "true" # Skip auth method negotiation and force usage of HTTP basic auth. Defaults to "false"
        # enableLfs: "true" # Enable git-lfs for this repository. Defaults to "false"
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repository
        annotations:
          description: "The Secret defines the Git repository connection properties"
  # Mapping to local secret from remote secret
  data:
    - secretKey: repo_password # Prop Name in the secret
      remoteRef:
        key: argocd # Name of the remote secret
        property: repo-password # Prop Name in the remote secret
{{- else -}}
{{/*

Test:
helm template -s templates/argocd-secret-repo.yml \
  --set 'git.repo.url=https://github/user/repo.git' \
  --set 'kube_x.auth.admin_user.password=welcome'  \
  . | yq

*/}}
---
apiVersion: v1
kind: Secret
metadata:
  name: 'argocd-secret-repo'
{{/*  namespace: '{{ .Values.namespace }}'*/}}
  labels:
    {{- /* This label is important so that Argocd sees it as repo configuration   */}}
    argocd.argoproj.io/secret-type: repository
  annotations:
    description: "This Secret defines the Git repository with connection properties"
{{- /*
 The values for all keys in the data field have to be base64-encoded strings.
 If the conversion to base64 string is not desirable, you can choose to specify the stringData field instead,
 which accepts arbitrary strings as values.
*/}}
data:
  url: '{{ .Values.git.repo.url | b64enc }}'
  {{- if ne .Values.git.repo.username "" }}
  username: '{{ .Values.git.repo.username | b64enc }}'
  {{- end}}
  {{- if ne .Values.git.repo.password "" }}
  password: '{{ .Values.git.repo.password | b64enc }}'
  {{- end}}
{{/*
  insecure: "true" # Ignore validity of server's TLS certificate. Defaults to "false"
  forceHttpBasicAuth: "true" # Skip auth method negotiation and force usage of HTTP basic auth. Defaults to "false"
  enableLfs: "true" # Enable git-lfs for this repository. Defaults to "false"
*/}}
{{- end -}}
{{- end -}}