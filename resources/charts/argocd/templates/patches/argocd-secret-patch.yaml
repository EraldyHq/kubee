{{- /*
  See definition here:
  https://github.com/argoproj/argo-cd/blob/b8508f29162b91a547ec94b25df8e1011c6576fb/docs/operator-manual/argocd-secret.yaml
*/}}
{{- /*
Test:
helm template -s templates/argocd-secret.yaml \
  --set 'kube_x.auth.admin_user.password=welcome'  \
  . | yq

*/}}
apiVersion: v1
kind: Secret
metadata:
  name: 'argocd-secret'
{{/*  namespace: '{{ .Values.namespace }}'*/}}
  annotations:
    description: "WebHook Secret and admin password"
{{- /*
 The values for all keys in the data field have to be base64-encoded strings.
 If the conversion to base64 string is not desirable, you can choose to specify the stringData field instead,
 which accepts arbitrary strings as values.
*/}}
data:
  {{- /*
    WebHook
    https://argo-cd.readthedocs.io/en/latest/operator-manual/webhook/#2-configure-argo-cd-with-the-webhook-secret-optional
  */}}
  {{- if ne .Values.git.webhook.secret "" }}
  webhook.{{ .Values.git.webhook.service }}.secret: "{{ .Values.git.webhook.secret | b64enc}}"
  {{- end }}
  {{- if ne .Values.git.webhook.uuid "" }}
  webhook.{{ .Values.git.webhook.service }}.uuid: "{{ .Values.git.webhook.uuid | b64enc}}"
  {{- end}}
  {{- if ne .Values.git.webhook.username "" }}
  webhook.{{ .Values.git.webhook.service }}.username: "{{ .Values.git.webhook.username | b64enc}}"
  webhook.{{ .Values.git.webhook.service }}.username: "{{ required "git.webhook.password is required" .Values.git.webhook.password | b64enc}}"
  {{- end}}
  {{- /*
    Admin User
    User/Admin Management doc: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/

    Note: The admin username is `admin`. You can change it only with the `argocd cli`

    The password is a bcrypt hash of the password (by default, randomly generated at install and stored in `argocd-initial-admin-secret`)
    # https://kostis-argo-cd.readthedocs.io/en/refresh-docs/getting_started/first_steps/#find-the-initial-password
  */}}
  admin.password: '{{ printf "%s" (required "kube_x.auth.admin_user.password is required" .Values.kube_x.auth.admin_user.password) | bcrypt | b64enc }}'