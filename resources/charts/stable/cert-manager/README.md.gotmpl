
[//]: # (README.md generated by gotmpl. DO NOT EDIT.)

{{ template "chart.typeBadge" . }}{{ template "chart.versionBadge" . }}{{ template "chart.appVersionBadge" . }}

# {{ template "chart.description" . }}


## About
This `kubee chart` will install [cert-manager](https://cert-manager.io/) to manage certificates.



## Installation

### Enable and set your Email

* By default, `cert-manager` is disabled, it needs to be enabled.
* The email is used as account id by Letsencrypt and is mandatory.

In your helm values file, set the following values:

```yaml
cluster:
  auth:
    admin_user:
      email: 'foo@bar.com'
cert_manager:
  enabled: true
```

### Deploy

```bash
kubee --cluster clusterName helmet play cert-manager
```


### Change the default issuer

By default, the certificate are issued with `letsencrypt-staging` to not hit the
letsencrypt rate limit in case of misconfiguration.

The issued staging certificate are therefore [not valid](#why-my-certificates-are-not-valid).

Once you have controlled that you receive certificate 
* from Letsencrypt
* and not the default Traefik certificate
you should change the default issuer value to `letsencrypt-prod` 

Example: In your cluster values file.
```yaml
cert_manager:
  issuers: 
    public:
      name: 'letsencrypt-prod'
```

## Features

It will create:
* [letsencrypt issuer](#letsencrypt-acme-issuers) to create external certificate (acme)
* [kubee-ca issuer](#kubee-internal-ca) to create internal service certificate (mtls)
* install the [cert-manager grafana dashboard and alerts](#dashboard-and-alerts)

### Letsencrypt Acme Issuers

2 `ClusterIssuers` are installed
* `letsencrypt-staging` for the `staging environment (test)`
* `letsencrypt-prod` for the `production environment`

The issuers solve the challenge:

* `http01` (default, ie an A or CNAME record should be present in the DNS Zone)
* and optional [DNS01 from cloudflare](#automatic-dns01-cloudflare-challenge-configuration)

The
* `letsencrypt-staging`. This is the Default used to:
  * ensure that the verification process is working properly before moving to production.
  * without hitting the [prod rate limits](https://letsencrypt.org/docs/rate-limits/)
* `letsencrypt-prod` issues valid signed certificate



### Kubee Internal CA

We use an internal CA to issue internal certificate
to:
* enable SSL communication internally
* issue certificate for auth service (database, oidc, ...)

### Dashboard and alerts

The [cert-manager mixin](https://monitoring.mixins.dev/cert-manager/) is installed
to create:
* the [grafana dashboard](https://monitoring.mixins.dev/cert-manager/#dashboards) if the [grafana chart ](../grafana/README.md) is enabled
* the [alerts](https://monitoring.mixins.dev/cert-manager/#alerts) if the [prometheus chart](../prometheus/README.md) is enabled


### Automatic DNS01 Cloudflare challenge configuration

By default, the `http01` challenge is executed.

If [Cloudflare is set as a DNS provider in your cluster values file](../../../../docs/site/cloudflare.md),
a `dns01` is executed.

You can then:
* issue wildcard certificate
* use dns name without creating A records.


## Config



### Check the Root CA Bundle regularly

The root CA Bundle does not change regularly, but it changes.
You should check the actual version regularly.

See `How-to` at [Securely Maintaining a trust-manager Installation](https://cert-manager.io/docs/trust/trust-manager/#securely-maintaining-a-trust-manager-installation)




{{ template "chart.valuesSection" . }}

For the whole set of values, see the [values file](values.yaml)
## Support

### Why my certificates are not valid

By default, this chart is set to work with the [Let's encrypt Staging environment](https://letsencrypt.org/docs/staging-environment/)
to not hit the rate limit.

The certificates are:
* not valid (not trusted)
* issued by:
    * Common Name (CN)	(STAGING) Counterfeit Cashew R10
    * Organization (O)	(STAGING) Let's Encrypt



## Contrib / Dev

See [contrib](contrib/contrib.md)






