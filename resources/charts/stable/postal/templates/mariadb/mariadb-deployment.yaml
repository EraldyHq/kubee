apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-deployment
  labels:
    app: mariadb
spec:
  replicas: 1
  strategy:
    # On restart only one instance can be up
    # 2025-03-06T09:46:43.286216299Z 2025-03-06  9:46:43 0 [Note] InnoDB: Check that you do not already have another mariadbd process using the same InnoDB data or log files.
    type: Recreate
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
      annotations:
        {{- include "postal-config-checksum-annotation" . | indent 8}}
    spec:
      containers:
        - name: mariadb
          image: 'mariadb{{if .Values.conf_kube.main_db.hashtag  }}@{{ .Values.conf_kube.main_db.hashtag}}{{else}}:{{.Values.conf_kube.main_db.version}}{{end}}'
          # starting with a db
          env:
            - name: MARIADB_USER
              value: {{.Values.conf_yaml.main_db.username}}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postal-name-config-secret" . }}
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: {{.Values.conf_yaml.main_db.database }}
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postal-name-config-secret" . }}
                  key: mariadb-password
          #command:
          #  ???
          #  - --port {{ .Values.conf_yaml.main_db.port }}
          ports:
            - containerPort: {{ .Values.conf_yaml.main_db.port }}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mariadb-admin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mariadb-admin ping -uroot -p"${password_aux}"
          resources: {{ .Values.conf_yaml.main_db.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            {{- /*            - name: custom-init-scripts*/}}
            {{- /*              mountPath: /docker-entrypoint-initdb.d*/}}
            # See Using a custom MariaDB configuration file
            # https://hub.docker.com/_/mariadb
            - name: config
              mountPath: /etc/mysql/conf.d/my.cnf
              subPath: my.cnf
      volumes:
        - name: custom-init-scripts
          secret:
            secretName: mariadb-init
            items:
              - key: init-sql
                path: 01-init.sql
        - name: config
          configMap:
            name: mariadb-cnf
        - name: data
          persistentVolumeClaim:
            claimName: mariadb-pvc-local

