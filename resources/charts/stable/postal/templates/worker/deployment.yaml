apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "postal.fullname" . }}-worker
  labels:
    app.kubernetes.io/name: postal
    app.kubernetes.io/component: worker
    # https://helm.sh/docs/chart_best_practices/labels/#standard-labels
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: postal
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: worker
      app.kubernetes.io/version: {{ .Chart.AppVersion }}
  replicas: {{ .Values.worker.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postal
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: worker
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}  # Checksum annotation
    spec:
      containers:
      - name: worker
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        command: ["postal", "worker"]
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: config
          mountPath: /config/
          readOnly: true
      volumes:
      - name: config
        secret:
          secretName: {{ include "postal-name" . }}