{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "cert_manager": {
      "description": "The cert manager kubee chart",
      "properties": {
        "acme_issuers": {
          "description": "Issuers endpoint",
          "properties": {
            "prod": {
              "properties": {
                "name": {
                  "default": "letsencrypt-prod",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "url": {
                  "default": "https://acme-v02.api.letsencrypt.org/directory",
                  "required": [],
                  "title": "url",
                  "type": "string"
                }
              },
              "required": [],
              "title": "prod",
              "type": "object"
            },
            "staging": {
              "properties": {
                "name": {
                  "default": "letsencrypt-staging",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "url": {
                  "default": "https://acme-staging-v02.api.letsencrypt.org/directory",
                  "required": [],
                  "title": "url",
                  "type": "string"
                }
              },
              "required": [],
              "title": "staging",
              "type": "object"
            }
          },
          "required": [],
          "title": "acme_issuers",
          "type": "object"
        },
        "cert-manager": {
          "description": " defined by either the name or alias of your dependency in Chart.yaml",
          "properties": {
            "clusterResourceNamespace": {
              "default": "",
              "description": "cluster-resource-namespace=my-namespace https://cert-manager.io/docs/configuration/#cluster-resource-namespace The Cluster Resource Namespace is defaulted as being the `cert-manager` namespace, A ClusterIssuer CA will create the certificate in this namespace https://cert-manager.io/docs/configuration/ca/#deployment",
              "required": [],
              "title": "clusterResourceNamespace"
            },
            "crds": {
              "properties": {
                "enabled": {
                  "default": true,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [],
              "title": "crds",
              "type": "object"
            },
            "namespace": {
              "default": "cert-manager",
              "description": " fixed so that we don't make any mistake",
              "required": [],
              "title": "namespace"
            },
            "prometheus": {
              "description": " https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/README.template.md#prometheus",
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "We don't create it ourselves because it's pretty hard.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "servicemonitor": {
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "servicemonitor",
                  "type": "object"
                }
              },
              "required": [],
              "title": "prometheus"
            },
            "webhook": {
              "properties": {
                "timeoutSeconds": {
                  "default": 4,
                  "required": [],
                  "title": "timeoutSeconds",
                  "type": "integer"
                }
              },
              "required": [],
              "title": "webhook",
              "type": "object"
            }
          },
          "required": [],
          "title": "cert-manager"
        },
        "dns01": {
          "description": " You don't need to publish a DNS A record",
          "properties": {
            "cloudflare": {
              "description": " Spec: https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEIssuerDNS01ProviderCloudflare Notes: in the doc, they use an email because they show an apiKey Auth, not an apiToken `ApiToken` is now the preferred method",
              "properties": {
                "dns_zones": {
                  "description": "The dns Zones that are managed by cloudflare, mandatory",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "dns_zones",
                  "type": "array"
                },
                "secret": {
                  "description": " A secret or external secret can be created",
                  "properties": {
                    "cloudflare_api_token": {
                      "default": "",
                      "description": "A Kubernetes secret will be created if not empty",
                      "required": [],
                      "title": "cloudflare_api_token",
                      "type": "string"
                    },
                    "external_secret_remote_ref": {
                      "description": " if remote ref key is not empty",
                      "properties": {
                        "key": {
                          "default": "",
                          "required": [],
                          "title": "key",
                          "type": "string"
                        },
                        "property": {
                          "default": "",
                          "required": [],
                          "title": "property",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "external_secret_remote_ref"
                    }
                  },
                  "required": [],
                  "title": "secret"
                }
              },
              "required": [],
              "title": "cloudflare"
            }
          },
          "required": [],
          "title": "dns01"
        },
        "enabled": {
          "default": "false",
          "description": " When disabled, the default certificate specified on Traefik is used Not a string, a boolean so no quote",
          "required": [],
          "title": "enabled"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "http01": {
          "description": " https://cert-manager.io/docs/tutorials/acme/http-validation/ This is the default configuration if there is no DNS challenge configured for the domain, You need then to update your DNS to add an A or CNAME record to point the domain name at the correct IP address Wildcard certificates are not supported with HTTP01 validation and require DNS01. This challenge is disabled if ingressClassName is empty",
          "properties": {
            "ingress_class_name": {
              "default": "traefik",
              "description": " Used by cert manager to create ingress resource to resolve the http01 challenge A new ingress resource with a randomly generated name is created in order to solve the challenge.",
              "required": [],
              "title": "ingress_class_name"
            }
          },
          "required": [],
          "title": "http01"
        },
        "issuer_name": {
          "default": "letsencrypt-staging",
          "description": " of kubee by default Should be changed to 'letsencrypt-prod' when validated",
          "required": [],
          "title": "issuer_name"
        },
        "kubee_internal": {
          "description": "Don't touch, used to block template output of cross dependency",
          "properties": {
            "install_cross_dependency": {
              "default": false,
              "required": [],
              "title": "install_cross_dependency",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubee_internal",
          "type": "object"
        },
        "namespace": {
          "default": "cert-manager",
          "description": "Namespace",
          "required": [],
          "title": "namespace",
          "type": "string"
        }
      },
      "required": [],
      "title": "kubee-cert-manager",
      "type": "object"
    },
    "components": {
      "description": " title: Components description: The components @schema",
      "properties": {
        "smtp": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "smtp",
          "type": "object"
        },
        "web": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "web",
          "type": "object"
        },
        "worker": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "worker",
          "type": "object"
        }
      },
      "required": [
        "smtp",
        "web",
        "worker"
      ],
      "title": "Components"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": "The hostname",
      "format": "hostname",
      "minLength": 1,
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": "Internal Kubee constant",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal",
      "type": "object"
    },
    "namespace": {
      "default": "mail",
      "description": "The installation Namespace",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "traefik": {
      "description": "A sub-chart of Traefik",
      "properties": {
        "auth": {
          "description": "Ingress Auth Configuration",
          "properties": {
            "middleware_name": {
              "default": "basic-auth",
              "description": " That's applied for internal web app (such as Traefik Dashboard, Prometheus, Alert Manager, ...) The app or api endpoints are still available from an internal container The supported auth are basic-auth and forward-auth Before changing to forward-auth, you should test it with the whoami chart",
              "required": [],
              "title": "middleware_name"
            },
            "private_networks": {
              "description": " used for Ingress Ip restrictions (Traefik IpAllowList) example for a home ip: 143.176.206.80/32",
              "items": {
                "required": []
              },
              "required": [],
              "title": "private_networks"
            }
          },
          "required": [],
          "title": "auth",
          "type": "object"
        },
        "default_certificate": {
          "description": " Set the default certificate as default traefik cert Mandatory for kubernetes-dashboard on a local development The rootCA should be added to the OS/Browser as trusted root CA https://doc.traefik.io/traefik/https/tls/#default-certificate",
          "properties": {
            "cert": {
              "default": "",
              "description": "set-file KUBEE.traefik.defaultCertificate.cert=cert/kube-x.dev+1.pem",
              "required": [],
              "title": "cert"
            },
            "key": {
              "default": "",
              "description": "set-file KUBEE.traefik.defaultCertificate.key=cert/kube-x.dev+1-key.pem",
              "required": [],
              "title": "key"
            }
          },
          "required": [],
          "title": "default_certificate"
        },
        "enabled": {
          "default": "false",
          "description": " Not a string, no quote",
          "required": [],
          "title": "enabled"
        },
        "entrypoints": {
          "description": " Used by template that creates IngressRoute (http and tcp)",
          "properties": {
            "smtps": {
              "properties": {
                "name": {
                  "default": "smtps",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "smtps",
              "type": "object"
            }
          },
          "required": [],
          "title": "entrypoints"
        },
        "global": {
          "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
          "required": [],
          "title": "global",
          "type": "object"
        },
        "hostname": {
          "default": "",
          "description": " The FQDN is dnsName.apexDomain If not empty, an ingress is created example: hostname: 'traefik-haship.nip.io'",
          "required": [],
          "title": "hostname"
        },
        "kubee_internal": {
          "description": "Don't change",
          "properties": {
            "install_cross_dependency": {
              "default": false,
              "required": [],
              "title": "install_cross_dependency",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "kubee_internal",
          "type": "object"
        },
        "middlewares": {
          "description": " https://doc.traefik.io/traefik/middlewares",
          "properties": {
            "auth_headers": {
              "description": "Middleware to apply auth headers on website with an authentication form",
              "properties": {
                "name": {
                  "default": "auth-headers",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auth_headers",
              "type": "object"
            },
            "basic_auth": {
              "description": " With the email as main identifier https://doc.traefik.io/traefik/middlewares/http/basicauth/ The admin user is added",
              "properties": {
                "name": {
                  "default": "basic-auth",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "users": {
                  "default": "",
                  "description": "List of extra users alongside the admin user",
                  "required": [],
                  "title": "users",
                  "type": "null"
                }
              },
              "required": [],
              "title": "basic_auth"
            },
            "forward_auth": {
              "description": " https://doc.traefik.io/traefik/middlewares/http/forwardauth/",
              "properties": {
                "name": {
                  "default": "forward-auth",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "forward_auth"
            },
            "forward_auth_bearer": {
              "description": " It can be applied on Kube API client such as Kubernetes Dashboard'",
              "properties": {
                "name": {
                  "default": "forward-auth-bearer",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "forward_auth_bearer"
            },
            "git_hooks": {
              "description": " Used in Gitops app such as Argocd https://doc.traefik.io/traefik/middlewares/http/ipallowlist/",
              "properties": {
                "name": {
                  "default": "git-hooks",
                  "required": [],
                  "title": "name",
                  "type": "string"
                },
                "service": {
                  "default": "github",
                  "required": [],
                  "title": "service",
                  "type": "string"
                }
              },
              "required": [],
              "title": "git_hooks"
            },
            "private_network": {
              "description": " Ip are given via the auth.private_networks",
              "properties": {
                "name": {
                  "default": "private-network",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [],
              "title": "private_network"
            }
          },
          "required": [],
          "title": "middlewares"
        },
        "namespace": {
          "default": "kube-system",
          "description": " The kube-system namespace tells kubernetes that this app has a higher priority",
          "required": [],
          "title": "namespace"
        },
        "traefik": {
          "description": " https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml",
          "properties": {
            "additionalArguments": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "additionalArguments",
              "type": "array"
            },
            "ingressRoute": {
              "description": " https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#access-traefik-dashboard-without-exposing-it",
              "properties": {
                "dashboard": {
                  "properties": {
                    "enabled": {
                      "default": false,
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "dashboard",
                  "type": "object"
                }
              },
              "required": [],
              "title": "ingressRoute"
            },
            "metrics": {
              "properties": {
                "prometheus": {
                  "description": "Prometheus is enabled by default",
                  "properties": {
                    "service": {
                      "description": " This value creates a dedicated metrics service to use with ServiceMonitor Enable Prometheus Metrics https://doc.traefik.io/traefik/observability/metrics/prometheus/ Metrics Info: https://doc.traefik.io/traefik/observability/metrics/overview/#global-metrics",
                      "properties": {
                        "enabled": {
                          "default": false,
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "service"
                    }
                  },
                  "required": [],
                  "title": "prometheus",
                  "type": "object"
                }
              },
              "required": [],
              "title": "metrics",
              "type": "object"
            },
            "nodeSelector": {
              "description": "nodeSelector is the simplest recommended form of node selection constraint.",
              "required": [],
              "title": "nodeSelector"
            },
            "ports": {
              "properties": {
                "smtp": {
                  "description": " It creates the smtp [entrypoint](https://doc.traefik.io/traefik/routing/entrypoints/) - \"--entryPoints.smtp.address=:8025/tcp\"",
                  "properties": {
                    "expose": {
                      "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                      "properties": {
                        "default": {
                          "default": true,
                          "required": [],
                          "title": "default",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "expose",
                      "type": "object"
                    },
                    "exposedPort": {
                      "default": 25,
                      "description": "Port on the host",
                      "required": [],
                      "title": "exposedPort",
                      "type": "integer"
                    },
                    "port": {
                      "default": 8025,
                      "description": "Container port",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "description": "Protocol",
                      "required": [],
                      "title": "protocol",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "smtp"
                },
                "smtps": {
                  "description": "SMTP submission over TLS",
                  "properties": {
                    "expose": {
                      "description": "Defines whether the port is listed in the service if service.type is LoadBalancer or NodePort.",
                      "properties": {
                        "default": {
                          "default": true,
                          "required": [],
                          "title": "default",
                          "type": "boolean"
                        }
                      },
                      "required": [],
                      "title": "expose",
                      "type": "object"
                    },
                    "exposedPort": {
                      "default": 465,
                      "description": "Port on the host",
                      "required": [],
                      "title": "exposedPort",
                      "type": "integer"
                    },
                    "port": {
                      "default": 8465,
                      "description": "Container port",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "protocol": {
                      "default": "TCP",
                      "description": "Protocol",
                      "required": [],
                      "title": "protocol",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "smtps",
                  "type": "object"
                },
                "web": {
                  "description": "Redirections",
                  "properties": {
                    "redirections": {
                      "description": "https://doc.traefik.io/traefik/routing/entrypoints/#redirection",
                      "properties": {
                        "entryPoint": {
                          "properties": {
                            "scheme": {
                              "default": "https",
                              "required": [],
                              "title": "scheme",
                              "type": "string"
                            },
                            "to": {
                              "default": "websecure",
                              "required": [],
                              "title": "to",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "title": "entryPoint",
                          "type": "object"
                        }
                      },
                      "required": [],
                      "title": "redirections",
                      "type": "object"
                    }
                  },
                  "required": [],
                  "title": "web",
                  "type": "object"
                }
              },
              "required": [],
              "title": "ports",
              "type": "object"
            },
            "providers": {
              "properties": {
                "kubernetesCRD": {
                  "properties": {
                    "allowEmptyServices": {
                      "default": "true",
                      "description": " https://acouvreur.github.io/sablier/#/guides/code-server-traefik-kubernetes?id=_3-deploy-traefik-using-helm",
                      "required": [],
                      "title": "allowEmptyServices"
                    }
                  },
                  "required": [],
                  "title": "kubernetesCRD",
                  "type": "object"
                },
                "kubernetesIngress": {
                  "properties": {
                    "allowEmptyServices": {
                      "default": true,
                      "description": "return 503, needed to start stopped container with sablier",
                      "required": [],
                      "title": "allowEmptyServices",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "title": "kubernetesIngress",
                  "type": "object"
                }
              },
              "required": [],
              "title": "providers",
              "type": "object"
            },
            "service": {
              "properties": {
                "ipFamilies": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "ipFamilies",
                  "type": "array"
                },
                "ipFamilyPolicy": {
                  "default": "SingleStack",
                  "description": " You can't set up a nodePort because the port is a high-end port between 30000-32767 You can install it as DaemonSet + Node port ? https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#install-as-a-daemonset",
                  "required": [],
                  "title": "ipFamilyPolicy"
                },
                "spec": {
                  "properties": {
                    "externalTrafficPolicy": {
                      "default": "Local",
                      "description": "Allow Origin Remote IP to be forwarded",
                      "required": [],
                      "title": "externalTrafficPolicy",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "spec",
                  "type": "object"
                }
              },
              "required": [],
              "title": "service",
              "type": "object"
            }
          },
          "required": [],
          "title": "traefik"
        }
      },
      "required": [],
      "title": "kubee-traefik",
      "type": "object"
    },
    "version": {
      "default": "v3.3.4",
      "description": "The postal version, https://github.com/postalserver/postal/releases",
      "required": [],
      "title": "Version"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "version",
    "kubee_internal"
  ],
  "type": "object"
}