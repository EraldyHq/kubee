{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "components": {
      "description": " title: Components description: The components @schema",
      "properties": {
        "smtp": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "smtp",
          "type": "object"
        },
        "web": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "web",
          "type": "object"
        },
        "worker": {
          "properties": {
            "resource": {
              "properties": {
                "cpu": {
                  "default": "",
                  "required": [],
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "",
                  "required": [],
                  "title": "memory",
                  "type": "string"
                }
              },
              "required": [
                "memory",
                "cpu"
              ],
              "title": "resource",
              "type": "object"
            }
          },
          "required": [
            "resource"
          ],
          "title": "worker",
          "type": "object"
        }
      },
      "required": [
        "smtp",
        "web",
        "worker"
      ],
      "title": "Components"
    },
    "enabled": {
      "default": false,
      "description": "Boolean to indicate that this chart is or will be installed in the cluster",
      "required": [],
      "title": "Enabled",
      "type": "boolean"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostname": {
      "default": "",
      "description": "The hostname",
      "format": "hostname",
      "minLength": 1,
      "required": [],
      "title": "Hostname"
    },
    "kubee_internal": {
      "description": " @ignored",
      "properties": {
        "install_cross_dependency": {
          "const": false,
          "default": "false",
          "description": " const: false @schema Constant used to not output template from kubee cross dependency in Chart.yaml Don't change, don't touch",
          "required": [],
          "title": "install_cross_dependency"
        }
      },
      "required": [],
      "title": "kubee_internal"
    },
    "mariadb": {
      "description": " check available values here: https://artifacthub.io/packages/helm/bitnami/mariadb?modal=values-schema @ignored",
      "properties": {
        "auth": {
          "properties": {
            "database": {
              "default": "postal",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": " title: Database Password description: The database password required: true minLength: 5 @schema",
              "minLength": 5,
              "required": [],
              "title": "Database Password"
            },
            "username": {
              "default": "postal",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [
            "database",
            "username",
            "password"
          ],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": "true",
          "description": "set it to false if you want to use [operator](https://github.com/mariadb-operator/mariadb-operator/)",
          "required": [],
          "title": "enabled"
        },
        "fullnameOverride": {
          "default": "postal-mariadb",
          "description": "TODO: we should switch to templating for the name to avoid using reference to fullname override everywhere",
          "required": [],
          "title": "fullnameOverride",
          "type": "string"
        },
        "initdbScripts": {
          "properties": {
            "grant_privileges.sql": {
              "default": "GRANT ALL PRIVILEGES ON `{{ .Values.mariadb.auth.database }}%`.* TO '{{ .Values.mariadb.auth.username }}'@'%' WITH GRANT OPTION;\n",
              "description": "NOTE: postal is creating postal-server-* databases to handle postal mail servers configuration",
              "required": [],
              "title": "grant_privileges.sql",
              "type": "string"
            }
          },
          "required": [
            "grant_privileges.sql"
          ],
          "title": "initdbScripts",
          "type": "object"
        }
      },
      "required": [
        "fullnameOverride",
        "auth",
        "initdbScripts"
      ],
      "title": "mariadb"
    },
    "namespace": {
      "default": "mail",
      "description": "The installation Namespace",
      "minLength": 1,
      "required": [],
      "title": "Namespace"
    },
    "signing_key": {
      "default": "",
      "description": "The signing key",
      "minLength": 5,
      "required": [],
      "title": "Signing Key"
    },
    "version": {
      "default": "v3.3.4",
      "description": "The postal version, https://github.com/postalserver/postal/releases",
      "required": [],
      "title": "Version"
    }
  },
  "required": [
    "enabled",
    "namespace",
    "hostname",
    "version",
    "signing_key"
  ],
  "type": "object"
}