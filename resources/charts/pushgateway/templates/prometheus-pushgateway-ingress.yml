{{- if and (eq .Values.kube_x.prometheus.pushgateway.enabled true) (ne .Values.kube_x.prometheus.pushgateway.hostname "") }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pushgateway
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    # Because Middleware is not namespace, we use the kube-system-traefik-dashboard-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-traefik-dashboard-auth@kubernetescrd
    {{- if ne (((.Values).kube_x).cert_manager).enabled false }}
    cert-manager.io/cluster-issuer: '{{ .Values.kube_x.cert_manager.defaultIssuerName }}'
    {{- end }}
spec:
  rules:
    - host: {{ required "kube_x.prometheus.pushgateway.hostname is required" .Values.kube_x.prometheus.pushgateway.hostname }}
      http:
        paths:
          - backend:
              service:
                name: pushgateway
                port:
                  number: 9091
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - {{ .Values.kube_x.prometheus.pushgateway.hostname }}
      secretName: pushgateway-cert
{{- end}}