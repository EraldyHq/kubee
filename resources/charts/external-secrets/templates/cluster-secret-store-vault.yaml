{{/*
  https://external-secrets.io/latest/provider/hashicorp-vault/
  https://external-secrets.io/v0.9.20/api/clustersecretstore/

  Test:
  helm template -s templates/cluster-secret-store-vault.yaml \
    --set 'kube_x.external_secrets.vault.apiToken=xxx'  \
    --set 'kube_x.vault.enabled=true'  \
    . | yq
*/}}
{{- if and (ne .Values.kube_x.external_secrets.store.vault.apiToken "") (eq .Values.kube_x.vault.enabled true) -}}
apiVersion: external-secrets.io/v1beta1
# cluster scoped SecretStore
kind: ClusterSecretStore
metadata:
  name: '{{ required ".Values.kube_x.external_secrets.store.name is required" .Values.kube_x.external_secrets.store.name }}'
spec:
  provider:
    vault:
      # server: "kube_vault_url"
      # server: https://vault.i.eraldy.com
      # server: http://vault-internal.vault:8200
      server: "http://vault.{{ .Values.kube_x.vault.namespace }}:8200"
      # path of the engine
      path: "{{ .Values.kube_x.vault.kvSecretStore.mountPath }}"
      # Version is the Vault KV secret engine version.
      # This can be either "v1" or "v2", defaults to "v2"
      # noinspection KubernetesUnknownValues
      version: "v{{ .Values.kube_x.vault.kvSecretStore.version }}"
      auth:
        # Points to the below secret that contains a vault token
        # https://www.vaultproject.io/docs/auth/token
        tokenSecretRef:
          name: "{{ template "external-secrets-vault-secret-name" . }}"
          namespace: "{{ .Release.Namespace }}"
          key: "{{ template "external-secrets-vault-secret-key" }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ template "external-secrets-vault-secret-name" . }}"
  namespace: "{{ .Release.Namespace }}"
data:
  {{ template "external-secrets-vault-secret-key" }}: '{{ .Values.kube_x.external_secrets.store.vault.apiToken | b64enc }}'
{{- end -}}
