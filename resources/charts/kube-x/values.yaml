# Bootstrap and common cluster values (ie global)

# Cluster Wide variables
cluster:
  # The cluster name
  # used:
  # * to identify the cluster (for instance, on prometheus remote-write metrics, the name is added as label)
  # * as default first instance name for operator (for instance, prometheus operator allows to install multiple prometheus that needs to be unique. Kube-prometheus asks for a unique name)
  name: 'kube-x'
  # Admin user
  #  * created as admin user in Kubernetes and other app
  #  * added in basicAuth
  adminUser:
    username: 'admin'
    # The password
    password: ''
    # Kubernetes clusterRole
    # * `cluster-admin` has full access
    # * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding
    clusterRole: 'cluster-admin'
    # The email
    # It's used by default in apps. For instance:
    # * letsencrypt registration email
    # * alert notifications: prometheus, argocd
    email: ''
  # Ingress Authentication of infra web app (such as Traefik Dashboard, Prometheus, Alert Manager, ...)
  # The app or api are still available from an internal container
  auth: 'basicAuth'
  # The kind of Secret manifest created
  # Valid values are:
  # `Secret`: A Kubernetes Secret manifest is created, the values are passed in the values.yaml with environment variables substitution
  # `ExternalSecret`: A ExternalSecret Manifest is created that retrieves the value in a store (External Secret should be installed).
  #                   Used for GitOps pulling such as in ArgoCd where the git repository is pulled and applied.
  secret: 'Secret'
  # Private Network ranges
  # used for Ingress Ip restrictions (Traefik IpAllowList)
  # example for a home ip: 143.176.206.80/32
  private_networks: []
  # email
  email:
    # Default smtp server parameters
    smtp:
      # The smtp host
      # if the host is not empty, smtp configuration are added
      # for example for argocd email notifications
      host: ''
      # the smtp port
      port: ''
      # the default from
      from: ''
      # the auth connection username
      username: ''
      # the auth connection password
      password: ''
      # hello (used to present itself, normally the email apex domain name)
      hello: ''

  
# Kube-X Dashboard Variables
kubernetes_dashboard:
  # The external DNS
  # Example: hostname: 'dash.kube-x.dev'
  # If set, an ingress will be created
  hostname: ''

# Install Monitoring for the core Kubernetes components
# Api Server, Dns, Controller Manager, Kubelet, Scheduler
kubernetes_monitoring:
  # Not a string, a boolean so no quote
  enabled: false

# Kube-X Traefik Variables
traefik:
  # Not a string, a boolean so no quote
  enabled: true
  # Instance/Release Name
  # the kube-system namespace tells kubernetes that this app has a higher priority
  namespace: 'kube-system'
  # Middleware
  # https://doc.traefik.io/traefik/middlewares
  middleware:
    # Create a basic Auth Middleware
    # https://doc.traefik.io/traefik/middlewares/http/basicauth/
    # Enabled by default when the admin user password is not empty
    basicAuth:
      # List of extra users
      users:
      # Example:
      # users:
      #   user1: password1
      #   user2: password2
  # Set the default certificate as default traefik cert
  # Mandatory for kubernetes-dashboard on a local development
  # The rootCA should be added to the OS/Browser as trusted root CA
  # https://doc.traefik.io/traefik/https/tls/#default-certificate
  defaultCertificate:
    # Path to the cert file relatif to the working directory (ie cluster directory)
    cert: ''
    key: ''
  # Traefik dashboard
  dashboard:
    # The FQDN is dnsName.apexDomain
    # If not empty, an ingress is created
    # example: hostname: 'traefik-haship.nip.io'
    hostname: ''

# Refer to the kube-x-prometheus chart
prometheus:
  # Enable or disable prometheus
  # Not a string, a boolean so no quote
  enabled: false


# Prometheus Alert manager that receives alert from Prometheus and manage them (silence, group, send alerts to email or external services)
alertmanager:
  # Enable or disable alert manager
  # Not a string, a boolean so no quote
  enabled: false
  # The installation namespace (should be the same as prometheus)
  namespace: 'prometheus'
  # hostname (install an ingress if not empty)
  hostname: ''
  # Opsgenie integration to send alert
  # Enabled if the api key is not empty
  opsgenie:
    apiKey: ''
  # Memory
  resources:
    memory: '50Mi'


# Prometheus node exporter to gather server metrics, install dashboard and alerts
# for node (ie OS, ie VPS)
node_exporter:
  # Not a string, a boolean so no quote
  enabled: false
  # The installation namespace
  namespace: 'prometheus' # prometheus component

# Prometheus Pushgateway to send metrics to Prometheus from a job
pushgateway:
  # Not a string, a boolean so no quote
  enabled: false
  # hostname (install an ingress if not empty)
  hostname: ''
  # The installation namespace
  namespace: 'prometheus' # prometheus component

# A prometheus exporter - Blackbox to do synthetic probe monitoring (ie verify the status of http,dns,... query)
# Probe definition can be done via the Probes Manifest of prometheus operator
blackbox_exporter:
  # Not a string, a boolean so no quote
  enabled: false
  # The installation namespace
  namespace: 'prometheus' # prometheus component

# Prometheus Adapter
prometheus_adapter:
  # Not a string, a boolean so no quote
  enabled: false
  # The installation namespace
  namespace: 'prometheus' # prometheus component



# An HTTP application that gives you HTTP information
# used to control Ingress configuration such as traefik
whoami:
  # Not a string, a boolean so no quote
  enabled: false
  # A non-empty Hostname will create an ingress
  # example: hostname: 'whoami.kube-x.dev'
  hostname: ''
  # Namespace
  namespace: 'whoami'


# Hashicorp Vault
vault:
  # Not a string, a boolean so no quote
  enabled: false
  # The hostname (create an ingress if not empty)
  hostname: ''
  # The installation namespace
  namespace: 'vault'
  # A KV secret store
  kvSecretStore:
    # The Vault KV secret engine version.
    # This can be either "v1" or "v2", defaults to "v2"
    version: 2
    # the mount Path
    mountPath: 'secret'

# Argocd
argocd:
  enabled: false
  # Namespace
  # https://argo-cd.readthedocs.io/en/stable/operator-manual/installation/#installing-argo-cd-in-a-custom-namespace
  namespace: 'argocd'
  # The argocd hostname
  # if not empty, an ingress is created
  hostname: ''
  # Git
  git:
    # Repo
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/argocd-repositories-yaml/
    repo:
      # The repo URL
      # !!! The extension `.git` is mandatory in the URL
      # Not https://github.com/user/argocd but https://github.com/user/argocd.git
      url: ''
      # Basic Auth
      username: ''
      password: ''
    # WebHook auth
    # https://argo-cd.readthedocs.io/en/latest/operator-manual/webhook/
    webhook:
      # The service (github, gitlab, gogs, bitbucket, azuredevops)
      service: 'github'
      secret: ''
      username: ''
      password: ''
      uuid: ''
  # ArgoCd Configuration
  conf:
    # Control the `--kubectl-parallelism-limit` parameters of [argocd-application-controller](https://argo-cd.readthedocs.io/en/stable/operator-manual/server-commands/argocd-application-controller/)
    # Number of allowed concurrent kubectl fork/execs. Any value less the 1 means no limit. (default 20)
    # We change the default to avoid CPU spike: https://github.com/argoproj/argo-cd/discussions/6964#discussioncomment-1164100
    controller_kubectl_parallelism_limit: 1
    # Control the `reposerver.parallelism.limit` parameter
    # [argocd-repo-server](https://argo-cd.readthedocs.io/en/stable/operator-manual/server-commands/argocd-repo-server/)
    # Limit on number of concurrent manifests generate requests (manifest tool invocations)
    # We change the default to avoid CPU spike: https://github.com/argoproj/argo-cd/discussions/6964#discussioncomment-1164100
    reposerver_parallelism_limit: 1
    # Control the `--metrics-cache-expiration duration` parameter (disabled  by default. e.g. 24h0m0s) of [argocd-application-controller](https://argo-cd.readthedocs.io/en/stable/operator-manual/server-commands/argocd-application-controller/)
    # As recommended here: https://argo-cd.readthedocs.io/en/stable/operator-manual/metrics/#application-controller-metrics
    controller_metrics_cache_expiration: '24h0m0s'
