# The cert manager with monitoring (alert and dashboard)

# If true, certificate are created for ingress routes.
# When disabled, the default certificate specified on Traefik is used
# Not a string, a boolean so no quote
enabled: false
# Namespace
namespace: 'cert-manager'

# The issuer used in all certificate request
# of kubee by default
# Should be changed to 'letsencrypt-prod'
# when validated
issuer_name: 'letsencrypt-staging'

# Issuers endpoint
acme_issuers:
  prod:
    name: 'letsencrypt-prod'
    url: 'https://acme-v02.api.letsencrypt.org/directory'
  staging:
    name: 'letsencrypt-staging'
    url: 'https://acme-staging-v02.api.letsencrypt.org/directory'

# Http01 challenge
# https://cert-manager.io/docs/tutorials/acme/http-validation/
# This is the default configuration if there is no DNS challenge configured for the domain,
# You need then to update your DNS to add an A or CNAME record to point the domain name at the correct IP address
# Wildcard certificates are not supported with HTTP01 validation and require DNS01.
# This challenge is disabled if ingressClassName is empty
http01:
  # Default IngressClassName
  # Used by cert manager to create ingress resource to resolve the http01 challenge
  # A new ingress resource with a randomly generated name is created in order to solve the challenge.
  ingress_class_name: traefik

# Dns01 challenge
# You don't need to publish a DNS A record
dns01:
  # Doc: https://cert-manager.io/docs/configuration/acme/dns01/cloudflare/
  # Spec: https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEIssuerDNS01ProviderCloudflare
  # Notes: in the doc, they use an email because they show an apiKey Auth, not an apiToken
  # `ApiToken` is now the preferred method
  cloudflare:
    # See cert-manager/README.md on how to get cloudflare api key
    # A secret or external secret can be created
    secret:
      # A Kubernetes secret will be created if not empty
      cloudflare_api_token: ''
      # An external secret will be created
      # if remote ref key is not empty
      external_secret_remote_ref:
        key: ''
        property: ''
    # The dns Zones that are managed by cloudflare, mandatory
    dns_zones: []

# https://github.com/cert-manager/cert-manager/blob/release-1.16/deploy/charts/cert-manager/values.yaml
# defined by either the name or alias of your dependency in Chart.yaml
cert-manager:
  # Installation namespace
  # fixed so that we don't make any mistake
  namespace: 'cert-manager'
  crds:
    enabled: true
  webhook:
    timeoutSeconds: 4   # Example: changing the webhook timeout using a Helm parameter
  # https://cert-manager.io/docs/devops-tips/prometheus-metrics/
  # https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/README.template.md#prometheus
  prometheus:
    # We don't create it ourselves because it's pretty hard.
    enabled: false
    servicemonitor:
      enabled: false
  # cluster resource namespace
  # The namespace used to store cluster wide data (such as DNS provider credentials, certificate, ...)
  # Set the default namespace to search for a resource on the cert-manager controller
  # --cluster-resource-namespace=my-namespace
  # https://cert-manager.io/docs/configuration/#cluster-resource-namespace
  # The Cluster Resource Namespace is defaulted as being the `cert-manager` namespace,
  # A ClusterIssuer CA will create the certificate in this namespace
  # https://cert-manager.io/docs/configuration/ca/#deployment
  clusterResourceNamespace: ""


# Don't touch, used to block template output of cross dependency
kubee_internal:
  install_cross_dependency: false