---
# Ref Doc: https://dexidp.io/docs/configuration/storage/#kubernetes-custom-resource-definitions-crds
# Example: https://github.com/dexidp/dex/blob/master/examples/k8s/dex.yaml#L127
# A service account so Dex can connect to the Kubernetes API to store session management data.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  namespace: dex
---
# An RBAC role for use with the above service account.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
  # Read-write access to all of Dex's custom objects, used for session management.
  - apiGroups: [dex.coreos.com] # API group created by dex
    resources: ["*"]
    verbs: ["*"]
  # Access to install the CRDs for Dex's custom objects.
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [create] # To manage its own resources, dex must be able to create customResourceDefinitions
---
# Bind the service account and the RBAC role together.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
  - kind: ServiceAccount
    name: dex