apiVersion: apps/v1
kind: Deployment
metadata:
  name: gogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gogs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gogs
    spec:
      volumes:
        - name: gogs-pvc
          persistentVolumeClaim:
            claimName: gogs-pvc
      containers:
        - name: gogs
          image: gogs/gogs:0.13
          env:
            # Socat link is deactivated as specified in the doc
            # https://github.com/gogs/gogs/blob/main/docker/README.md#container-options
            - name: SOCAT_LINK
              value: "false"
          volumeMounts:
            - name: gogs-pvc
              mountPath: '/data'
          ports:
            - containerPort: 3000
              name: http-port
            - containerPort: 22
              name: ssh-port
          # Startup Probe: Used to check if the application has started before starting the other probes
          # periodSeconds * failureThreshold = 10 * 10 = 100 seconds to starts
          startupProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            # 5 seconds after the start
            initialDelaySeconds: 5
            # The probe is performed every 55 second
            periodSeconds: 10
            # after 3 failed prob, the container is considered unhealthy.
            failureThreshold: 10
            # after 1 successful prob, the container is considered healthy.
            successThreshold: 1
          # Readiness Probe: Checks if the app is ready to serve traffic.
          # If it fails, the pod is removed from the service endpoints.
          # Used also in rollout
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            # 5 seconds after the startup prob
            initialDelaySeconds: 5
            # The probe is performed every 55 second
            periodSeconds: 10
            # after 3 failed prob, the container is considered unhealthy.
            failureThreshold: 3
            # after 1 successful prob, the container is considered healthy.
            successThreshold: 1
          # Liveness Probe: Checks if the app is running. If it fails, Kubernetes restarts the container.
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            # 5 seconds after the startup prob
            initialDelaySeconds: 5
            # The probe is performed every 55 second
            periodSeconds: 10
            # after 3 failed prob, the container is considered unhealthy.
            failureThreshold: 3
            # after 1 successful prob, the container is considered healthy.
            successThreshold: 1
          resources:
            # guaranteed amount of  memory
            requests:
              memory: "64Mi"
            # maximum amount that the container can use.
            limits:
              memory: "128Mi"
