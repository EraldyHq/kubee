# All these values are used in sub-chart
# to create template manifest

# Cluster Wide variables
cluster:
  # Admin user
  #  * created as admin user in Kubernetes and other app)
  #  * added in basicAuth
  adminUser:
    username: 'admin'
    password: ''
    # Kubernetes clusterRole
    # * `cluster-admin` has full access
    # * `admin` does not have access to node and cluster scope related object such as ClusterRoleBinding
    clusterRole: 'cluster-admin'
    # The email
    # Used by default for instance for letsencrypt
    email: ''
  # Authentication of internal infra website such as Traefik Dashboard, ...
  auth: basicAuth


# Templating variables
# Template is a reserved name
templates:
  # The prefix added to all name created by kube-x template
  globalPrefix: "kube-x"
  
# Kube-X Dashboard Variables
kubernetes_dashboard:
  # The external DNS
  # Example: hostname: 'dash.kube-x.dev'
  # If set, an ingress will be created
  hostname: ''

# Kube-X Traefik Variables
traefik:
  # Instance/Release Name
  namespace: traefik
  middleware:
    # Enabled by default when the admin user password is not empty
    # https://doc.traefik.io/traefik/middlewares/http/basicauth/
    basicAuth:
      # List of users
      users:
      # user1: password1
  # Set the default certificate as default traefik cert
  # Mandatory for kubernetes-dashboard on a local development
  # The rootCA should be added to the OS/Browser as trusted root CA
  # https://doc.traefik.io/traefik/https/tls/#default-certificate
  defaultCertificate:
    # Path to the cert file relatif to the working directory (ie cluster directory)
    cert: ''
    key: ''
  # Traefik dashboard
  dashboard:
    # The FQDN is dnsName.apexDomain
    # If not empty, an ingress is created
    # example: hostname: 'traefik.kube-x.dev'
    hostname: ''

# The prometheus kube-x env
prometheus:
  enabled: false

# The cert manager kube-x env
cert_manager:
  enabled: false

  defaultIssuerName: 'letsencrypt-staging'

  acmeIssuers:
    prod:
      name: 'letsencrypt-prod'
      url: 'https://acme-v02.api.letsencrypt.org/directory'
    staging:
      name: 'letsencrypt-staging'
      url: 'https://acme-staging-v02.api.letsencrypt.org/directory'

  # Http01 challenge
  # https://cert-manager.io/docs/tutorials/acme/http-validation/
  # It is your responsibility to point each domain name at the correct IP address for your ingress controller.
  # Wildcard certificates are not supported with HTTP01 validation and require DNS01.
  http01:
    # Default IngressClassName
    # Used by cert manager to create ingress resource to resolve the http01 challenge
    # A new ingress resource with a randomly generated name is created in order to solve the challenge.
    ingressClassName: traefik

  # Dns01 challenge
  # You don't need to publish a DNS A record
  # Doc: https://cert-manager.io/docs/configuration/acme/dns01/cloudflare/
  # Spec: https://cert-manager.io/docs/reference/api-docs/#acme.cert-manager.io/v1.ACMEIssuerDNS01ProviderCloudflare
  dns01:
    cloudflare:
      # Note in the doc, they use an email because they show an apiKey Auth, not an apiToken
      # `ApiToken` is now the preferred method
      # See README how to get cloudflare api key
      cloudflareApiToken: ''
      # The dns Zone that are managed by cloudflare
      dnsZones:
        - tabulify.com
        - eraldy.com
        - datacadamia.com
        - combostrap.com
        - gerardnico.com
        - bytle.net


whoami:
  hostname: 'whoami.kube-x.dev'


