.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "kube-x-helm-x" "1" "" "Version Latest" "Helm with Extra\[cq]s"
.hy
.SH NAME
.PP
\f[V]kube-x-helm-x\f[R] (aka \f[V]helx\f[R]) is the \f[V]kube-x\f[R]
package manager.
.SH Features
.SS Familiar
.PP
It\[cq]s based on the following well-supported Kubernetes tools.
* Helm (https://helm.sh/), the Kubernetes Package Manager *
kustomize (https://github.com/kubernetes-sigs/kustomize), the official
manifest customization tool * Jsonnet
Kubernetes (https://jsonnet.org/articles/kubernetes.html), the Google
configuration language
.PP
At its core, \f[V]helm-x\f[R] is a \f[V]Helm\f[R] wrapper.
.PP
It just executes Helm commands (https://helm.sh/docs/helm/helm/) and
therefore installs Charts (https://helm.sh/docs/topics/charts/)
.PP
All new installations: * have a history (ie
revision) (https://helm.sh/docs/helm/helm_history/) * can be
rollback (https://helm.sh/docs/helm/helm_rollback/) * can be
diffed (https://github.com/databus23/helm-diff)
.PP
There is no magic.
All commands are: * bash command, * printed to the shell (visible) * and
can be re-executed at wil
.SS New
.PP
\f[V]Helx\f[R] adds support for: * \f[V]Jsonnet\f[R] - to add Prometheus
Mixin (https://monitoring.mixins.dev/)) support * \f[V]kustomize\f[R] -
to add support for application without Helm Chart such as ArgoCd) *
cluster based installation through the use of the kube-x library chart
the same values are used accros multiple app/charts * with environment
variables processing * with configurable namespace
.SH Synopsis
.IP
.nf
\f[C]
kube-x-helx [-c|--cluster clusterName] [-n|--namespace namespace] [--debug] command options
\f[R]
.fi
.PP
where \f[V]command\f[R] can be:
.IP \[bu] 2
\f[V]play packageName\f[R] - Upgrade or install a Helx Chart if not
present
.IP \[bu] 2
\f[V]upgrade packageName\f[R] - Upgrade a Helx Chart
.IP \[bu] 2
\f[V]install packageName\f[R] - install a Helx Chart
.IP \[bu] 2
\f[V]template packageName\f[R] - Output the manifests for a Chart (used
for ArgoCd Integration and debugging)
.IP \[bu] 2
\f[V]values\f[R] - Shows the values
.PP
The cluster is determined in order of precedence by:
.IP \[bu] 2
the \f[V]-c|--cluster clusterName\f[R] option
.IP \[bu] 2
the current directory
.SH What is a Kube-x Chart?
.PP
A \f[V]Kube-x Chart\f[R]: * is a
sub-chart (https://helm.sh/docs/chart_template_guide/subcharts_and_globals/)
* that installed only one application * with the name of the app
installed (ie grafana, not grafana operator) * that depends on: * the
kube-x Chart to share * \f[V]values.yaml\f[R] file * and
\f[V]library\f[R] * and optionally one other Chart * with optional
\f[V]Jsonnet\f[R] and \f[V]kustomize\f[R] processing through the kube-x
helm post-renderer
.IP \[bu] 2
installs only one application as \f[V]kube-x\f[R] is a platform.
.RS 2
.IP \[bu] 2
For instance, installing an application such as grafana can be done via:
.RS 2
.IP \[bu] 2
a raw deployment manifest
.IP \[bu] 2
or the grafana operator
.RE
.IP \[bu] 2
Only one chart is going to supports this 2 methods.
.RE
.SH What is the Kube-x Chart?
.PP
The kube-x Chart is a shared chart dependency with: * a shared library *
a values.yaml
.PP
The values files has one top node for each kube-x chart.
Each node contains all configurations for: * the chart * the external
services (opsgenie, new relic, grafana cloud, \&...)
- making clear what the parameters are for.
.PP
Each \f[V]values.yaml\f[R] top configuration node contains the following
common properties: * \f[V]namespace\f[R]: the namespace where to install
the chart (default to the name of the chart if not found) *
\f[V]enabled\f[R]: if the chart is used or not (default to false if not
found).
It\[cq]s used to: * conditionally applied manifest.
If there is no grafana, don\[cq]t install the dashboard * cluster
bootstrapping (ie install all charts at once)
