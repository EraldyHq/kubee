.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "kube-x-helm-post-renderer" "1" "" "Version Latest" "A Helm Post renderer"
.hy
.SH NAME
.PP
\f[V]kube-x-helm-post-renderer\f[R] is a helm post
renderer (https://helm.sh/docs/topics/advanced/#post-rendering) that
adds support for: * \f[V]Jsonnet\f[R] * and \f[V]kustomize\f[R]
.SH SYNOPSIS
.PP
A post renderer to integrate \f[V]kustomize\f[R] and \f[V]jsonnet\f[R]
.IP
.nf
\f[C]
kube-x-helm-post-renderer appDirectory valuesPath KUBE_X_NAMESPACE
\f[R]
.fi
.PP
where:
.IP \[bu] 2
\f[V]KUBE_X_CHART_DIRECTORY\f[R] is the directory of the app to install
.IP \[bu] 2
\f[V]KUBE_X_VALUES_PATH\f[R] is the path to the values file
.IP \[bu] 2
\f[V]KUBE_X_NAMESPACE\f[R] is the installation namespace
.PP
Note: the Helm templates should be passed via stdin
.SH How it works
.IP \[bu] 2
if a \f[V]jsonnet\f[R] directory exists at the root of the chart
directory
.RS 2
.IP \[bu] 2
if a \f[V]jsonnetfile.json\f[R] is present, the
\f[V]jsonnet bundler\f[R] is executed to fetch dependencies
.IP \[bu] 2
the \f[V]jsonnet\f[R] files present in the \f[V]jsonnet\f[R] directory
are executed
.IP \[bu] 2
the output are added to the Helm templates
.RE
.IP \[bu] 2
if a \f[V]kustomization.yml\f[R] is present at the root of the chart
directory
.RS 2
.IP \[bu] 2
\f[V]kustomize\f[R] is applied on the whole set of templates (Helm +
Jsonnet templates)
.RE
.SH Jsonnet
.IP \[bu] 2
The files with the extension \f[V]jsonnet\f[R] stored in the
\f[V]jsonnet\f[R] directory are executed.
.IP \[bu] 2
The output is added as new manifest.
.SH Kustomization
.IP \[bu] 2
Your chart should have a \f[V]kustomization.yml\f[R] file at the root
with a resources called \f[V]kube-x-helm-x-templates.yml\f[R]
.IP \[bu] 2
The kustomization file can include the \f[V]${KUBE_X_NAMESPACE}\f[R]
environment variable.
.PP
Example:
.IP
.nf
\f[C]
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: ${KUBE_X_NAMESPACE}
patches:
  - patch: |-
      - op: replace
        path: /subjects/0/namespace
        value: ${KUBE_X_NAMESPACE}
    target:
      kind: ClusterRoleBinding
resources:
  - https://raw.githubusercontent.com/orga/project/vx.x.x/manifests/install.yaml
  - kube-x-helm-x-templates.yml
\f[R]
.fi
